[{"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\index.js":"1","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\reportWebVitals.js":"2","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\App.js":"3","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\pages\\Transaction.js":"4","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\User.js":"5","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\findSaving\\FindSaving.js":"6","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\pages\\Expenses.js":"7","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\pages\\Income.js":"8","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\Dashboard.js":"9","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\Signup.js":"10","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\Login.js":"11","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\NavBar\\Navbar.js":"12","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\ForgotPassword.js":"13","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\leadingPage\\LeadingPage.js":"14","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\PieCharts.js":"15","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\Cards.js":"16","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\firebase.js":"17","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\leadingPage\\Info.js":"18","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\charts\\linerChart.js":"19","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\NavBar\\SidebarData.js":"20","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\loginWith\\Facebook.js":"21","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\loginWith\\Google.js":"22","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\charts\\pieChart.js":"23","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\card\\Cart.js":"24","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\profil\\Profil.js":"25"},{"size":520,"mtime":1614178214793,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1613418804175,"results":"28","hashOfConfig":"27"},{"size":3692,"mtime":1614178214701,"results":"29","hashOfConfig":"27"},{"size":183,"mtime":1613418804174,"results":"30","hashOfConfig":"27"},{"size":656,"mtime":1613418804151,"results":"31","hashOfConfig":"27"},{"size":106,"mtime":1613418804155,"results":"32","hashOfConfig":"27"},{"size":10938,"mtime":1614178214810,"results":"33","hashOfConfig":"27"},{"size":163,"mtime":1614178214812,"results":"34","hashOfConfig":"27"},{"size":380,"mtime":1613418804150,"results":"35","hashOfConfig":"27"},{"size":7356,"mtime":1614178214790,"results":"36","hashOfConfig":"27"},{"size":4599,"mtime":1614178214773,"results":"37","hashOfConfig":"27"},{"size":2518,"mtime":1613671739695,"results":"38","hashOfConfig":"27"},{"size":2683,"mtime":1613418804169,"results":"39","hashOfConfig":"27"},{"size":16054,"mtime":1613503585359,"results":"40","hashOfConfig":"27"},{"size":214,"mtime":1613418804151,"results":"41","hashOfConfig":"27"},{"size":3133,"mtime":1614178264922,"results":"42","hashOfConfig":"27"},{"size":464,"mtime":1613418804170,"results":"43","hashOfConfig":"27"},{"size":623,"mtime":1613418804160,"results":"44","hashOfConfig":"27"},{"size":3808,"mtime":1613418804154,"results":"45","hashOfConfig":"27"},{"size":1156,"mtime":1614178214724,"results":"46","hashOfConfig":"27"},{"size":1697,"mtime":1613418804171,"results":"47","hashOfConfig":"27"},{"size":1977,"mtime":1613418804172,"results":"48","hashOfConfig":"27"},{"size":1137,"mtime":1613418804155,"results":"49","hashOfConfig":"27"},{"size":1871,"mtime":1614178214726,"results":"50","hashOfConfig":"27"},{"size":4402,"mtime":1614178214754,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n83fb2",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\index.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\reportWebVitals.js",[],["116","117"],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\App.js",["118","119","120","121","122","123"],"import firebase from 'firebase'\r\nimport './App.css'\r\nimport { useState, useEffect } from 'react'\r\nimport Login from './components/registration/Login'\r\nimport Signup from './components/registration/Signup'\r\nimport User from './components/Rotation/User'\r\nimport ForgotPassword from './components/registration/ForgotPassword'\r\nimport Navbar from './components/NavBar/Navbar'\r\n\r\nimport LeadingPage from './components/leadingPage/LeadingPage'\r\n\r\nimport MainDeposit from './components/Deposit/MainDeposit'\r\n\r\n\r\nimport Transaction from './pages/Transaction'\r\nimport Income from './pages/Income'\r\nimport Expenses from './pages/Expenses'\r\nimport FindSaving from './components/findSaving/FindSaving'\r\nimport Profile from './components/profile/Profile'\r\nimport Dashboard from './components/Rotation/Dashboard'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n    Route,\r\n} from 'react-router-dom'\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState(null)\r\n    const [income, setIncome] = useState(null)\r\n    const [expenses, setExpenses] = useState(null)\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((firebaseUser) => {\r\n            async function manageIncomeExpenses() {\r\n                const firestoreCurrentCollection = await firebase\r\n                    .firestore()\r\n                    .collection('income')\r\n                    .doc(firebaseUser.uid)\r\n                    .get()\r\n            }\r\n            // async function manageIncomeExpenses() {\r\n            //     const firestoreCurrentCollection = await firebase\r\n            //         .firestore()\r\n            //         .collection('income')\r\n            //         .doc(firebaseUser.uid)\r\n            //         .get()\r\n\r\n            //     if (firestoreCurrentCollection.exists) {\r\n            //         firebase\r\n            //             .firestore()\r\n            //             .collection('income')\r\n            //             .doc(firebaseUser.uid)\r\n            //             .set({ incomeValue: 0, expensesValue: 0 })\r\n            //     } else {\r\n            //     }\r\n            // }\r\n            setUser(firebaseUser)\r\n            if (firebaseUser) {\r\n                // manageIncomeExpenses()\r\n                firebase\r\n                    .firestore()\r\n                    .collection('user')\r\n                    .doc(firebaseUser.uid)\r\n                    .update({\r\n                        displayName: firebaseUser.displayName,\r\n                    })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                {user ? <Navbar /> : null}\r\n\r\n                <Switch>\r\n                    <Route path=\"/transaction\" exact component={Transaction} />\r\n                    <Route path=\"/income\" component={Income} />\r\n                    <Route path=\"/expenses\" component={Expenses} />\r\n                    <Route exact path=\"/\">\r\n                        {user ? (\r\n                            <Redirect push to=\"/dashboard\" />\r\n                        ) : (\r\n                            <LeadingPage />\r\n                        )}\r\n                    </Route>\r\n                    <Router exact path=\"/dashboard\">\r\n                        <Dashboard />\r\n                    </Router>\r\n                    <Router exact path=\"/registration\">\r\n                        <Signup />\r\n                    </Router>\r\n                    <Route exact path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route exact path=\"/user\">\r\n                        <User />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route exact path=\"/forgot-password\">\r\n                        <ForgotPassword />\r\n                    </Route>\r\n                    <Route exact path=\"/find-saving\">\r\n                        <FindSaving />\r\n                    </Route>\r\n                    <Route exact path=\"/calculator\">\r\n                      <MainDeposit/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\pages\\Transaction.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\User.js",["124","125","126","127"],"import { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nexport default function User() {\r\n    const [error, setError] = useState('')\r\n\r\n    function logout() {}\r\n    return (\r\n        <>\r\n            {/* <Card className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profil</h2>\r\n                </Card.Body>\r\n            </Card> */}\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={logout}>\r\n                    Log out\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\findSaving\\FindSaving.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\pages\\Expenses.js",["128","129","130","131","132","133"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Spinner, OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { DropdownButton, Dropdown, Form } from 'react-bootstrap'\r\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react'\r\nimport { toast } from 'react-toastify'\r\nimport firebase from 'firebase'\r\nimport Swal from 'sweetalert2'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\r\nimport Rating from 'react-simple-star-rating'\r\nimport myGrupRemoveIcoN from './img/dropRemov.svg'\r\nimport './exp.css'\r\n// import myGrupRemoveIcoN from './img/dropRemov.svg'\r\n//\r\nconst expList = [\r\n    {\r\n        nameExp: 'Auto insurance.',\r\n    },\r\n    {\r\n        nameExp: 'Health insurance.',\r\n    },\r\n    {\r\n        nameExp: 'Car payment.',\r\n    },\r\n    {\r\n        nameExp: 'Child care',\r\n    },\r\n    {\r\n        nameExp: 'Utility',\r\n    },\r\n]\r\ntoast.configure()\r\n\r\nfunction Expenses() {\r\n    const [uid, setUid] = useState(null)\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((currentUser) => {\r\n            setUid(currentUser?.uid)\r\n        })\r\n    }, [])\r\n\r\n    const [emptyData, setEmptyData] = useState(false)\r\n\r\n    const [group, setGroup] = useState(false)\r\n    const [rating, setRating] = useState(0)\r\n    const [req, setReq] = useState(true)\r\n\r\n    const [dropDownVal, setDropDownVal] = useState('Select Expenses Group')\r\n    const [dropVal, setDropVal] = useState(expList)\r\n    const [filterDrop, setFilterDrop] = useState()\r\n    //------------------\r\n    const [rowData, setRowData] = useState([])\r\n    const [fullData, setFullData] = useState()\r\n    //-------------------\r\n    const groupNameRef = useRef()\r\n    const nameRef = useRef()\r\n    const priceRef = useRef()\r\n    const [selectedGroup, setSelectedGroup] = useState('Car Payment')\r\n    //-------------------\r\n    const [targetGroup, setTargetGroup] = useState()\r\n\r\n    const toDay = () =>\r\n        new Date().toLocaleDateString().split('/').join('-').toString()\r\n\r\n    const thisTime = () => new Date().toLocaleTimeString()\r\n\r\n    function userMessage(num, msg) {\r\n        if (num === 1) {\r\n            return toast.info(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        if (num === 2) {\r\n            return toast.success(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        if (num === 3) {\r\n            return toast.error(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (uid) {\r\n            firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .get((doc) => {\r\n                    if (!doc.data()[toDay()]) {\r\n                        setEmptyData(!emptyData)\r\n                    }\r\n                })\r\n        }\r\n    }, [uid])\r\n\r\n    //\r\n    async function handleAddExpenses() {\r\n        if (parseInt(priceRef.current.value) !== +priceRef.current.value) {\r\n            priceRef.current.style.border = 'red solid 3px'\r\n\r\n            return userMessage(1, '🤨 Please add only number in a price')\r\n        }\r\n        if (nameRef.current.value.length < 1) {\r\n            nameRef.current.style.border = 'red solid 3px'\r\n            return userMessage(1, '😕 Name - Input should not be empty')\r\n        }\r\n        setReq((prev) => !prev)\r\n        if (emptyData) {\r\n            await firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .set({\r\n                    [toDay()]: [\r\n                        {\r\n                            group: selectedGroup,\r\n                            name: nameRef.current.value,\r\n                            value: priceRef.current.value,\r\n                            priority: rating,\r\n                            date: toDay() + thisTime(),\r\n                        },\r\n                    ],\r\n                })\r\n            setEmptyData((prev) => !prev)\r\n        } else {\r\n            await firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .update({\r\n                    [toDay()]: firebase.firestore.FieldValue.arrayUnion({\r\n                        group: selectedGroup,\r\n                        name: nameRef.current.value,\r\n                        value: priceRef.current.value,\r\n                        priority: rating,\r\n                        date: toDay() + ' - ' + thisTime(),\r\n                    }),\r\n                })\r\n        }\r\n\r\n        setReq((prev) => !prev)\r\n        return userMessage(1, 'Added successFull')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!uid) {\r\n            return\r\n        }\r\n        firebase\r\n            .firestore()\r\n            .collection('expenses')\r\n            .doc(uid)\r\n            .onSnapshot((doc) => {\r\n                if (doc.data()[toDay()]) {\r\n                    setRowData(doc.data()[toDay()].reverse())\r\n                }\r\n            })\r\n    }, [uid])\r\n\r\n    async function handleDropDownAddVal() {\r\n        if (dropVal.find((el) => el.nameExp === groupNameRef.current.value)) {\r\n            return userMessage(\r\n                1,\r\n                '😕 The group has already been added, you cannot add twice'\r\n            )\r\n        }\r\n        if (groupNameRef.current.value.length === 0) {\r\n            return setGroup(!group)\r\n        }\r\n        await firebase\r\n            .firestore()\r\n            .collection('user')\r\n            .doc(uid)\r\n            .update({\r\n                dropdown: firebase.firestore.FieldValue.arrayUnion({\r\n                    nameExp: groupNameRef.current.value,\r\n                }),\r\n            })\r\n        setDropDownVal(groupNameRef.current.value)\r\n        setGroup((prev) => !prev)\r\n        return userMessage(\r\n            2,\r\n            '😎 The new group has been successfully added to your account'\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        if (!uid) {\r\n            return\r\n        }\r\n        firebase\r\n            .firestore()\r\n            .collection('user')\r\n            .doc(uid)\r\n            .onSnapshot((doc) => {\r\n                if (doc.data()?.dropdown) {\r\n                    setDropVal(() => [...dropVal, ...doc.data()?.dropdown])\r\n                    //remove dubllicate from dropdown data\r\n                    setDropVal((prev) =>\r\n                        prev.filter(\r\n                            (v, i, a) =>\r\n                                a.findIndex((t) => t.nameExp === v.nameExp) ===\r\n                                i\r\n                        )\r\n                    )\r\n                }\r\n            })\r\n    }, [uid])\r\n    async function handleRemoveGroup(e) {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text:\r\n                'If you delete then all information on this group is deleted.!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!',\r\n        }).then((result) => {\r\n            setTargetGroup(e.target.parentNode.innerHTML.split('<')[0])\r\n\r\n            if (result.isConfirmed) {\r\n                firebase\r\n                    .firestore()\r\n                    .collection('expenses')\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then((doc) => {\r\n                        setFullData((prev) => (prev = doc.data()))\r\n                    })\r\n\r\n                firebase\r\n                    .firestore()\r\n                    .collection('user')\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then((doc) => {\r\n                        setFilterDrop(doc.data().dropdown)\r\n                    })\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (filterDrop) {\r\n            let data = filterDrop.filter(\r\n                ({ nameExp }) => nameExp != targetGroup\r\n            )\r\n            firebase\r\n                .firestore()\r\n                .collection('user')\r\n                .doc(uid)\r\n                .set({ dropdown: data })\r\n            console.log(filterDrop, 'effect')\r\n            setDropVal([...expList, ...data])\r\n        }\r\n    }, [filterDrop])\r\n\r\n    useEffect(() => {\r\n        if (fullData) {\r\n            let filteredData = fullData\r\n            for (let arr in filteredData) {\r\n                filteredData[arr] = filteredData[arr].filter(\r\n                    ({ group }) => group !== targetGroup\r\n                )\r\n            }\r\n            firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .set({ ...filteredData })\r\n        }\r\n    }, [fullData])\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title as=\"h3\" className=\"headerTooltip\">\r\n                Popover right\r\n            </Popover.Title>\r\n            <Popover.Content>How important is your spending?</Popover.Content>\r\n        </Popover>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"container \">\r\n                <div className=\" add\">\r\n                    {group ? (\r\n                        <DropdownButton id=\"mainColor\" title={dropDownVal}>\r\n                            {dropVal.map(({ nameExp }, index) => {\r\n                                return (\r\n                                    <Dropdown.Item\r\n                                        key={index}\r\n                                        className=\"drop-hover\"\r\n                                        as=\"button\"\r\n                                        onClick={(e) => {\r\n                                            setDropDownVal(\r\n                                                () => e.target.outerText\r\n                                            )\r\n                                            setSelectedGroup(\r\n                                                () => e.target.outerText\r\n                                            )\r\n                                        }}\r\n                                    >\r\n                                        <p className=\"dropDownData\">\r\n                                            {nameExp}\r\n                                            {!expList.find(\r\n                                                ({ nameExp: val }) =>\r\n                                                    val === nameExp\r\n                                            ) ? (\r\n                                                <img\r\n                                                    onClick={handleRemoveGroup}\r\n                                                    className=\"remove_group_dropdown\"\r\n                                                    src={myGrupRemoveIcoN}\r\n                                                />\r\n                                            ) : null}\r\n                                        </p>\r\n                                    </Dropdown.Item>\r\n                                )\r\n                            })}\r\n                        </DropdownButton>\r\n                    ) : (\r\n                        <Form.Control\r\n                            ref={groupNameRef}\r\n                            className=\"expInput\"\r\n                            placeholder=\"Group name\"\r\n                        />\r\n                    )}\r\n\r\n                    <button\r\n                        className=\"btn mainColor expLeft \"\r\n                        onClick={\r\n                            group\r\n                                ? () => setGroup(!group)\r\n                                : handleDropDownAddVal\r\n                        }\r\n                    >\r\n                        {group ? '+Create new Group' : 'Add group'}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"add namPrice\">\r\n                    <Form.Control\r\n                        className=\"expInput expLeft\"\r\n                        placeholder=\"Name\"\r\n                        ref={nameRef}\r\n                        onChange={() => {\r\n                            nameRef.current.style.border = 'none'\r\n                        }}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"expInput expLeft\"\r\n                        placeholder=\"Price\"\r\n                        ref={priceRef}\r\n                        onChange={() => {\r\n                            priceRef.current.style.border = 'none'\r\n                        }}\r\n                    />\r\n                    <Form.Check className=\"expLeft expCheck\" />\r\n                </div>\r\n                <span className=\"txtc\">Cost Priority</span>\r\n                <div className=\"rate\">\r\n                    <Rating\r\n                        onClick={(rate) => {\r\n                            setRating(rate)\r\n                        }}\r\n                        ratingValue={rating}\r\n                        size={25}\r\n                        label\r\n                        transition\r\n                        fillColor=\"orange\"\r\n                        emptyColor=\"gray\"\r\n                    />\r\n                    <OverlayTrigger\r\n                        trigger=\"hover\"\r\n                        placement=\"right\"\r\n                        overlay={popover}\r\n                    >\r\n                        <p className=\"ratingPriority\">?</p>\r\n                    </OverlayTrigger>\r\n                </div>\r\n                {req ? (\r\n                    <Button\r\n                        className=\"btn mainColor w-50\"\r\n                        onClick={handleAddExpenses}\r\n                    >\r\n                        Add List\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        className=\"w-50 mainColor\"\r\n                        variant=\"primary\"\r\n                        disabled\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"listt \">\r\n                <br />\r\n                <div\r\n                    className=\"ag-theme-alpine\"\r\n                    style={{ height: 300, width: 'auto' }}\r\n                >\r\n                    <AgGridReact rowData={rowData}>\r\n                        <AgGridColumn field=\"group\"></AgGridColumn>\r\n                        <AgGridColumn field=\"name\"></AgGridColumn>\r\n                        <AgGridColumn field=\"value\"></AgGridColumn>\r\n                        <AgGridColumn field=\"priority\"></AgGridColumn>\r\n                        <AgGridColumn field=\"date\"></AgGridColumn>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Expenses\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\pages\\Income.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\Dashboard.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\Signup.js",["134"],"import { Form, Button, Card, Spinner } from 'react-bootstrap'\r\nimport { Container } from 'react-bootstrap'\r\nimport './login.css'\r\nimport { useRef, useState } from 'react'\r\nimport firebase from 'firebase'\r\nimport { auth } from './firebase'\r\nimport * as EmailValidator from 'email-validator'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './login.css'\r\n\r\ntoast.configure()\r\nexport default function Signup() {\r\n    const [loading, setLoading] = useState(false)\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const surNameRef = useRef()\r\n    const nameRef = useRef()\r\n    // const history = useHistory()\r\n\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    function signup(email, password) {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    async function handleSumbit(e) {\r\n        e.preventDefault()\r\n\r\n        if (!EmailValidator.validate(emailRef.current.value)) {\r\n            return userMessage(false, '❌ Invalid Email Address:')\r\n        }\r\n\r\n        if (!(passwordRef.current.value === passwordConfirmRef.current.value)) {\r\n            return userMessage(false, '❌ Password do not much')\r\n        }\r\n        if (\r\n            passwordRef.current.value.length < 6 ||\r\n            passwordConfirmRef.current.value < 6\r\n        ) {\r\n            return userMessage(\r\n                false,\r\n                '❌ Password should be minimum 6 characters'\r\n            )\r\n        }\r\n        try {\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            let fullName =\r\n                nameRef.current.value + ' ' + surNameRef.current.value\r\n            let currentUser = auth.currentUser\r\n            currentUser.updateProfile({\r\n                displayName: fullName,\r\n            })\r\n\r\n            await firebase\r\n                .firestore()\r\n                .collection('user')\r\n                .doc(currentUser.uid)\r\n                .update({\r\n                    displayName: currentUser.displayName,\r\n                })\r\n            //--\r\n            setLoading(() => false)\r\n            window.location.href = '/dashboard'\r\n            userMessage(true, `✅ Welcome ${currentUser.displayName}`)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            return userMessage(\r\n                false,\r\n                '❌ The email address is already in use by another account.'\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: '100vh' }}\r\n                id=\"bolola\"\r\n            >\r\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                    <Card>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Form>\r\n                                <h2 className=\"text-center mb-4 drk\">\r\n                                    Sign up\r\n                                </h2>\r\n                                <Form.Group id=\"name\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        ref={nameRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                    <Form.Label>Surname</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        ref={surNameRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        ref={emailRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        ref={passwordRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password-confirm\">\r\n                                    <Form.Label>\r\n                                        Password Confirmation\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        ref={passwordConfirmRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Button\r\n                                    onClick={handleSumbit}\r\n                                    className=\"w-100 btn loginBtn signup\"\r\n                                    type=\"sumit\"\r\n                                >\r\n                                    {loading ? (\r\n                                        <>\r\n                                            <Spinner\r\n                                                as=\"span\"\r\n                                                animation=\"border\"\r\n                                                size=\"sm\"\r\n                                                role=\"status\"\r\n                                                aria-hidden=\"true\"\r\n                                            />\r\n                                            <span className=\"sr-only\">\r\n                                                Loading...\r\n                                            </span>\r\n                                        </>\r\n                                    ) : (\r\n                                        'Login'\r\n                                    )}\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\Login.js",["135","136"],"import { Form, Button, Card } from 'react-bootstrap'\r\nimport { useRef } from 'react'\r\nimport './login.css'\r\nimport * as EmailValidator from 'email-validator'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport Google from './loginWith/Google'\r\nimport Facebook from './loginWith/Facebook'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport firebase from 'firebase'\r\nimport { Container } from 'react-bootstrap'\r\nimport { auth } from './firebase'\r\nimport './login.css'\r\ntoast.configure()\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const history = useHistory()\r\n\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    async function handleSumbit(e) {\r\n        e.preventDefault()\r\n\r\n        if (!EmailValidator.validate(emailRef.current.value)) {\r\n            return userMessage(false, `❌ Email not found`)\r\n        }\r\n\r\n        try {\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            userMessage(true, `✅ Loggined`)\r\n            // setUser(auth.currentUser)\r\n            return history.push('/dashboard')\r\n        } catch (error) {\r\n            return userMessage(false, `❌ ${error.message}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: '100vh' }}\r\n            >\r\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                    <Card>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Form>\r\n                                <h2 className=\"text-center mb-4 drk\">\r\n                                    Sign in\r\n                                </h2>\r\n                                {/* <Facebook /> */}\r\n\r\n                                <Google />\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        ref={emailRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        ref={passwordRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Link to=\"/forgot-password\">\r\n                                    Forgot password ?\r\n                                </Link>\r\n                                <Button\r\n                                    onClick={handleSumbit}\r\n                                    className=\"w-100 btn loginBtn signup\"\r\n                                    type=\"sumit\"\r\n                                >\r\n                                    LOGIN\r\n                                </Button>\r\n                                <hr />\r\n                                <div className=\"or\">\r\n                                    <span> Or</span> <br />\r\n                                </div>\r\n                            </Form>\r\n\r\n                            <Link to=\"/registration\">\r\n                                <Button className=\"w-100 btn \">Sing up</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\NavBar\\Navbar.js",["137"],"import React, { useState } from 'react'\r\nimport firebase from 'firebase'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { SidebarData } from './SidebarData'\r\nimport './Navbar.css'\r\nimport { IconContext } from 'react-icons'\r\nimport Logo from './../leadingPage/dist/images/logo.png'\r\nimport { nanoid } from 'nanoid'\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false)\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n    const [isShown, setIsShown] = useState(false)\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <div className=\"navbar\">\r\n                    <img className=\"log\" src={Logo} />\r\n                    <button\r\n                        className=\"btn butt\"\r\n                        onClick={() => {\r\n                            firebase.auth().signOut()\r\n                            window.location.href = '/'\r\n                        }}\r\n                    >\r\n                        Log Out\r\n                    </button>\r\n                    <Link to=\"#\" className=\"menu-bars\"></Link>\r\n                </div>\r\n                <nav\r\n                    className={!sidebar ? 'nav-menu active' : 'nav-menu'}\r\n                    onMouseEnter={() => setIsShown(true)}\r\n                    onMouseLeave={() => setIsShown(false)}\r\n                >\r\n                    <ul className=\"nav-menu-items ulCl\" onClick={showSidebar}>\r\n                        {SidebarData.map((item, index) => {\r\n                            return (\r\n                                <React.Fragment key={nanoid()}>\r\n                                    <NavLink\r\n                                        className={`${item.cName} pos`}\r\n                                        to={item.path}\r\n                                        activeClassName=\"activeLink\"\r\n                                    >\r\n                                        {item.icon}\r\n                                        {isShown && (\r\n                                            <span className=\"nav-bar-item\">\r\n                                                {item.title}\r\n                                            </span>\r\n                                        )}\r\n                                    </NavLink>\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\nexport default Navbar\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\ForgotPassword.js",["138"],"import { Form, Button, Card } from 'react-bootstrap'\r\nimport { Container } from 'react-bootstrap'\r\nimport './login.css'\r\nimport { useRef } from 'react'\r\nimport firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport './login.css'\r\n\r\ntoast.configure()\r\nexport default function ForgotPassword(props) {\r\n    const emailRef = useRef()\r\n\r\n    async function handleForgot() {\r\n        try {\r\n            await firebase.auth().sendPasswordResetEmail(emailRef)\r\n            toast.info('📩' + ' Pleas check your email', {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        } catch (e) {\r\n            toast.error('❌ ' + e.message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: '100vh' }}\r\n                id=\"bolola\"\r\n            >\r\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                    <Card>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Form>\r\n                                <h2 className=\"text-center mb-4 drk\">\r\n                                    Password reset\r\n                                </h2>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        ref={emailRef}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    onClick={handleForgot}\r\n                                    className=\"w-100 btn loginBtn signup\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Reset Password\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\leadingPage\\LeadingPage.js",["139","140","141","142","143","144","145","146","147","148","149","150"],"import React from 'react'\r\nimport './dist/css/style.css'\r\nimport './dist/css/ld.css'\r\nimport Info from './Info'\r\nimport { Link } from 'react-router-dom'\r\nimport app from './dist/images/svg/app.svg'\r\nimport cutom_budget from './dist/images/svg/cutsom_budget.svg'\r\nimport goal from './dist/images/svg/goal.svg'\r\nimport save_smart from './dist/images/svg/save_smart.svg'\r\nimport logo from './dist/images/logo.png'\r\n\r\nexport default function LeadingPage() {\r\n    let info = [\r\n        {\r\n            icon: app,\r\n            title: ' All your money in one app',\r\n            txt: ` See where all your money goes by\r\n            easily adding your cash, credit\r\n            cards, investments, and bills.`,\r\n        },\r\n        {\r\n            icon: cutom_budget,\r\n            title: ' Spend smarter and save more',\r\n            txt: `Personalized Finance™ make\r\n            your money go further. We’ll\r\n            automatically find savings you\r\n            missed.`,\r\n        },\r\n        {\r\n            icon: save_smart,\r\n            title: ' Save smarter with custom budgets',\r\n            txt: `Start saving more today. Easily\r\n            create your budget in Finance.\r\n            We’ll automatically categorize\r\n            your transactions so you don’t\r\n            have to.`,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <div className=\"body-wrap\">\r\n                <header className=\"site-header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"site-header-inner head\">\r\n                            <div className=\"brand header-brand\">\r\n                                <h1 className=\"m-0\">\r\n                                    <img\r\n                                        className=\"header-logo-image log\"\r\n                                        src={logo}\r\n                                        alt=\"Logo\"\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            {/* <div className=\"hero-cta\">\r\n                                <a className=\"button \">Log in</a>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <section className=\"hero\">\r\n                        <div className=\"container\">\r\n                            <div className=\"hero-inner\">\r\n                                <div className=\"hero-copy\">\r\n                                    <h1 className=\"hero-title mt-0\">\r\n                                        The easiest way to <br /> manage\r\n                                        personal finance\r\n                                    </h1>\r\n                                    <p className=\"hero-paragraph\">\r\n                                        Reach your goals with personalized\r\n                                        insights, custom budgets, spend\r\n                                        tracking, and subscription\r\n                                        monitoring—all for free\r\n                                    </p>\r\n                                    <div className=\"hero-cta\">\r\n                                        <a\r\n                                            className=\"button  st\"\r\n                                            href=\"/registration\"\r\n                                        >\r\n                                            Get start\r\n                                        </a>\r\n                                        <a className=\"button\" href=\"/login\">\r\n                                            Login\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"hero-figure anime-element\">\r\n                                    <img src=\"https://cdn.pixabay.com/photo/2019/06/16/18/28/finance-icons-4278471_1280.png\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"features section\">\r\n                        <div className=\"container\">\r\n                            <div className=\"features-inner section-inner has-bottom-divider\">\r\n                                <div className=\"features-wrap\">\r\n                                    {info.map(({ icon, title, txt }, index) => {\r\n                                        return (\r\n                                            <Info\r\n                                                icon={icon}\r\n                                                title={title}\r\n                                                txt={txt}\r\n                                                key={index}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"pricing section\">\r\n                        <div className=\"container-sm\">\r\n                            <div className=\"pricing-inner section-inner\">\r\n                                <div className=\"pricing-header text-center\">\r\n                                    <h2 className=\"section-title mt-0\">\r\n                                        Unlimited for all\r\n                                    </h2>\r\n                                    <p className=\"section-paragraph mb-0\">\r\n                                        Lorem ipsum dolor sit amet, consectetur\r\n                                        adipiscing elit, sed do eiusmod tempor\r\n                                        incididunt ut labore et dolore magna\r\n                                        aliqua. Ut ad quis nostrud.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"pricing-tables-wrap\">\r\n                                    <div className=\"pricing-table\">\r\n                                        <div className=\"pricing-table-inner is-revealing\">\r\n                                            <div className=\"pricing-table-main\">\r\n                                                <div className=\"pricing-table-header pb-24\">\r\n                                                    <div className=\"pricing-table-price\">\r\n                                                        <span className=\"pricing-table-price-currency h2\">\r\n                                                            $\r\n                                                        </span>\r\n                                                        <span className=\"pricing-table-price-amount h1\">\r\n                                                            49\r\n                                                        </span>\r\n                                                        <span className=\"text-xs\">\r\n                                                            /month\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"pricing-table-features-title text-xs pt-24 pb-24\">\r\n                                                    What you will get\r\n                                                </div>\r\n                                                <ul className=\"pricing-table-features list-reset text-xs\">\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            <div className=\"pricing-table-cta mb-8\">\r\n                                                <a\r\n                                                    className=\"button button-primary button-shadow button-block\"\r\n                                                    href=\"#\"\r\n                                                >\r\n                                                    Pre order now\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"cta section\">\r\n                        <div className=\"container\">\r\n                            <div className=\"cta-inner section-inner\">\r\n                                <h3 className=\"section-title mt-0\">\r\n                                    Still not convinced on buying?\r\n                                </h3>\r\n                                <div className=\"cta-cta\">\r\n                                    <a\r\n                                        className=\"button button-primary button-wide-mobile\"\r\n                                        href=\"/registration\"\r\n                                    >\r\n                                        Get in touch\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n                <footer className=\"site-footer\">\r\n                    <div className=\"container\">\r\n                        <div className=\"site-footer-inner\">\r\n                            <div className=\"brand footer-brand\">\r\n                                <a href=\"#\">\r\n                                    <img\r\n                                        className=\"header-logo-image log\"\r\n                                        src={logo}\r\n                                        alt=\"Logo\"\r\n                                    />\r\n                                </a>\r\n                            </div>\r\n                            <ul className=\"footer-links list-reset\">\r\n                                <li>\r\n                                    <a href=\"#\">Contact</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">About us</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">FAQ's</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Support</a>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"footer-social-links list-reset\">\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <span className=\"screen-reader-text\">\r\n                                            Facebook\r\n                                        </span>\r\n                                        <svg\r\n                                            width={16}\r\n                                            height={16}\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                d=\"M6.023 16L6 9H3V6h3V4c0-2.7 1.672-4 4.08-4 1.153 0 2.144.086 2.433.124v2.821h-1.67c-1.31 0-1.563.623-1.563 1.536V6H13l-1 3H9.28v7H6.023z\"\r\n                                                fill=\"#0270D7\"\r\n                                            />\r\n                                        </svg>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <span className=\"screen-reader-text\">\r\n                                            Twitter\r\n                                        </span>\r\n                                        <svg\r\n                                            width={16}\r\n                                            height={16}\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                d=\"M16 3c-.6.3-1.2.4-1.9.5.7-.4 1.2-1 1.4-1.8-.6.4-1.3.6-2.1.8-.6-.6-1.5-1-2.4-1-1.7 0-3.2 1.5-3.2 3.3 0 .3 0 .5.1.7-2.7-.1-5.2-1.4-6.8-3.4-.3.5-.4 1-.4 1.7 0 1.1.6 2.1 1.5 2.7-.5 0-1-.2-1.5-.4C.7 7.7 1.8 9 3.3 9.3c-.3.1-.6.1-.9.1-.2 0-.4 0-.6-.1.4 1.3 1.6 2.3 3.1 2.3-1.1.9-2.5 1.4-4.1 1.4H0c1.5.9 3.2 1.5 5 1.5 6 0 9.3-5 9.3-9.3v-.4C15 4.3 15.6 3.7 16 3z\"\r\n                                                fill=\"#0270D7\"\r\n                                            />\r\n                                        </svg>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <span className=\"screen-reader-text\">\r\n                                            Google\r\n                                        </span>\r\n                                        <svg\r\n                                            width={16}\r\n                                            height={16}\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                d=\"M7.9 7v2.4H12c-.2 1-1.2 3-4 3-2.4 0-4.3-2-4.3-4.4 0-2.4 2-4.4 4.3-4.4 1.4 0 2.3.6 2.8 1.1l1.9-1.8C11.5 1.7 9.9 1 8 1 4.1 1 1 4.1 1 8s3.1 7 7 7c4 0 6.7-2.8 6.7-6.8 0-.5 0-.8-.1-1.2H7.9z\"\r\n                                                fill=\"#0270D7\"\r\n                                            />\r\n                                        </svg>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"footer-copyright\">\r\n                                © 2021 by Super-Team\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\PieCharts.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\Rotation\\Cards.js",["151","152","153"],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\firebase.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\leadingPage\\Info.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\charts\\linerChart.js",[],"C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\NavBar\\SidebarData.js",["154","155"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as IoIcons from 'react-icons/io'\r\nimport * as GrIcons from 'react-icons/gr'\r\n\r\nimport { FaPiggyBank } from 'react-icons/fa'\r\nimport { BsArrowLeftRight } from 'react-icons/bs'\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Dashboard',\r\n        path: '/dashboard',\r\n        icon: <BsArrowLeftRight />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Income',\r\n        path: '/Income',\r\n        icon: <FaPiggyBank />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Expenses',\r\n        path: '/Expenses',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        cName: 'nav-text',\r\n    },\r\n    /*{\r\n        title: 'Team',\r\n        path: '/team',\r\n        icon: <IoIcons.IoMdPeople />,\r\n        cName: 'nav-text',\r\n    },*/\r\n   {\r\n        title: 'Calculator',\r\n        path: '/calculator',\r\n        icon: <IoIcons.IoMdHelpCircle />,\r\n        cName: 'nav-text',\r\n    },\r\n     {\r\n        title: 'Contacts',\r\n        path: '/messages',\r\n        icon: <FaIcons.FaEnvelopeOpenText />,\r\n        cName: 'nav-text',\r\n    },\r\n\r\n]\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\loginWith\\Facebook.js",["156","157","158","159","160"],"import React from 'react'\r\nimport firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\ntoast.configure()\r\nexport default function LoginWith({ setUser }) {\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n    return (\r\n        <div\r\n            className=\"login_with\"\r\n            oonClick={() => {\r\n                var provider = new firebase.auth.FacebookAuthProvider()\r\n                firebase\r\n                    .auth()\r\n                    .signInWithPopup(provider)\r\n                    .then((result) => {\r\n                        var user = result.user\r\n                    })\r\n                    .catch((error) => {\r\n                        var errorMessage = error.message\r\n                        var email = error.email\r\n                    })\r\n            }}\r\n        >\r\n            <img\r\n                className=\"login_with_img\"\r\n                src=\"https://i.pinimg.com/originals/42/75/49/427549f6f22470ff93ca714479d180c2.png\"\r\n            />\r\n            <span>Log in with Facebook</span>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\registration\\loginWith\\Google.js",["161"],"import React from 'react'\r\nimport firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\ntoast.configure()\r\nexport default function LoginWith() {\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n    return (\r\n        <div\r\n            className=\"login_with\"\r\n            onClick={() => {\r\n                const provider = new firebase.auth.GoogleAuthProvider()\r\n                firebase\r\n                    .auth()\r\n                    .signInWithPopup(provider)\r\n                    .then((result) => {\r\n                        var user = result.user\r\n                        userMessage(true, `✅ Welcome ${user.displayName}`)\r\n                        setTimeout(() => {\r\n                            window.location.href = 'dashboard'\r\n                        }, 3000)\r\n                    })\r\n                    .catch((error) => {\r\n                        var errorMessage = error.message\r\n                        userMessage(false, `❌  ${errorMessage}`)\r\n                    })\r\n            }}\r\n        >\r\n            <img\r\n                className=\"login_with_img\"\r\n                src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-google-icon-logo-png-transparent-svg-vector-bie-supply-14.png\"\r\n            />\r\n            <span>Sign in with Google</span>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\charts\\pieChart.js",["162"],"import {PieChart,Pie } from 'recharts'\r\n\r\nconst data01 = [\r\n    {\r\n      \"name\": \"Group A\",\r\n      \"value\": 400\r\n    },\r\n    {\r\n      \"name\": \"Group B\",\r\n      \"value\": 300\r\n    },\r\n    {\r\n      \"name\": \"Group C\",\r\n      \"value\": 300\r\n    },\r\n    {\r\n      \"name\": \"Group D\",\r\n      \"value\": 200\r\n    },\r\n    {\r\n      \"name\": \"Group E\",\r\n      \"value\": 278\r\n    },\r\n    {\r\n      \"name\": \"Group F\",\r\n      \"value\": 189\r\n    }\r\n  ];\r\n  const data02 = [\r\n    {\r\n      \"name\": \"Group A\",\r\n      \"value\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Group B\",\r\n      \"value\": 4567\r\n    },\r\n    {\r\n      \"name\": \"Group C\",\r\n      \"value\": 1398\r\n    },\r\n    {\r\n      \"name\": \"Group D\",\r\n      \"value\": 9800\r\n    },\r\n    {\r\n      \"name\": \"Group E\",\r\n      \"value\": 3908\r\n    },\r\n    {\r\n      \"name\": \"Group F\",\r\n      \"value\": 4800\r\n    }\r\n  ];\r\n\r\n\r\n      export default function App(props) {\r\n          return (\r\n            <PieChart width={300} height={250}>\r\n\r\n                <Pie data={data02} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#d65a31\" label />\r\n            </PieChart>\r\n          )\r\n      }\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\card\\Cart.js",["163","164","165"],"import React, { PureComponent } from 'react'\r\nimport { BarChart, Bar, Tooltip, Legend } from 'recharts'\r\nexport default function App(props) {\r\n    const data = [\r\n        {\r\n            name: 'Page A',\r\n            uv: 4000,\r\n            pv: 2400,\r\n            amt: 2400,\r\n        },\r\n        {\r\n            name: 'Page B',\r\n            uv: 3000,\r\n            pv: 1398,\r\n            amt: 2210,\r\n        },\r\n        {\r\n            name: 'Page C',\r\n            uv: 2000,\r\n            pv: 9800,\r\n            amt: 2290,\r\n        },\r\n        {\r\n            name: 'Page D',\r\n            uv: 2780,\r\n            pv: 3908,\r\n            amt: 2000,\r\n        },\r\n        {\r\n            name: 'Page E',\r\n            uv: 1890,\r\n            pv: 4800,\r\n            amt: 2181,\r\n        },\r\n        {\r\n            name: 'Page F',\r\n            uv: 2390,\r\n            pv: 3800,\r\n            amt: 2500,\r\n        },\r\n        {\r\n            name: 'Page G',\r\n            uv: 3490,\r\n            pv: 4300,\r\n            amt: 2100,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <div className=\"cart_and_icon_card\">\r\n                <svg width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <image href={props.icon} height=\"30\" width=\"30\" />\r\n                </svg>\r\n\r\n                <BarChart width={80} height={30} data={data}>\r\n                    <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n\r\n                    <Tooltip />\r\n                </BarChart>\r\n            </div>\r\n            <div className=\"card_type_money\">\r\n                <span className=\"card_type\">{props.type}</span>\r\n                <span\r\n                    style={{ color: `${props.font_color}` }}\r\n                    className=\"card_money\"\r\n                >\r\n                    {props.money}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\artur\\Desktop\\finance\\MyFinance\\src\\components\\profil\\Profil.js",["166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":30,"column":12,"nodeType":"173","messageId":"174","endLine":30,"endColumn":18},{"ruleId":"171","severity":1,"message":"175","line":30,"column":20,"nodeType":"173","messageId":"174","endLine":30,"endColumn":29},{"ruleId":"171","severity":1,"message":"176","line":31,"column":12,"nodeType":"173","messageId":"174","endLine":31,"endColumn":20},{"ruleId":"171","severity":1,"message":"177","line":31,"column":22,"nodeType":"173","messageId":"174","endLine":31,"endColumn":33},{"ruleId":"171","severity":1,"message":"178","line":34,"column":28,"nodeType":"173","messageId":"174","endLine":34,"endColumn":48},{"ruleId":"171","severity":1,"message":"179","line":35,"column":23,"nodeType":"173","messageId":"174","endLine":35,"endColumn":49},{"ruleId":"171","severity":1,"message":"180","line":1,"column":10,"nodeType":"173","messageId":"174","endLine":1,"endColumn":14},{"ruleId":"171","severity":1,"message":"181","line":1,"column":24,"nodeType":"173","messageId":"174","endLine":1,"endColumn":29},{"ruleId":"171","severity":1,"message":"182","line":5,"column":12,"nodeType":"173","messageId":"174","endLine":5,"endColumn":17},{"ruleId":"171","severity":1,"message":"183","line":5,"column":19,"nodeType":"173","messageId":"174","endLine":5,"endColumn":27},{"ruleId":"184","severity":1,"message":"185","line":114,"column":8,"nodeType":"186","endLine":114,"endColumn":13,"suggestions":"187"},{"ruleId":"184","severity":1,"message":"188","line":227,"column":8,"nodeType":"186","endLine":227,"endColumn":13,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":265,"column":42,"nodeType":"192","messageId":"193","endLine":265,"endColumn":44},{"ruleId":"184","severity":1,"message":"194","line":275,"column":8,"nodeType":"186","endLine":275,"endColumn":20,"suggestions":"195"},{"ruleId":"184","severity":1,"message":"194","line":291,"column":8,"nodeType":"186","endLine":291,"endColumn":18,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":329,"column":49,"nodeType":"199","endLine":333,"endColumn":51},{"ruleId":"171","severity":1,"message":"200","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},{"ruleId":"171","severity":1,"message":"201","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":16},{"ruleId":"171","severity":1,"message":"202","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":17,"column":21,"nodeType":"199","endLine":17,"endColumn":55},{"ruleId":"203","severity":1,"message":"204","line":17,"column":29,"nodeType":"192","messageId":"205","endLine":17,"endColumn":30},{"ruleId":"171","severity":1,"message":"206","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":14},{"ruleId":"171","severity":1,"message":"207","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":89,"column":37,"nodeType":"199","endLine":89,"endColumn":128},{"ruleId":"208","severity":1,"message":"209","line":174,"column":49,"nodeType":"199","endLine":177,"endColumn":50},{"ruleId":"208","severity":1,"message":"209","line":209,"column":33,"nodeType":"199","endLine":209,"endColumn":45},{"ruleId":"208","severity":1,"message":"209","line":219,"column":37,"nodeType":"199","endLine":219,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":222,"column":37,"nodeType":"199","endLine":222,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":225,"column":37,"nodeType":"199","endLine":225,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":228,"column":37,"nodeType":"199","endLine":228,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":233,"column":37,"nodeType":"199","endLine":233,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":250,"column":37,"nodeType":"199","endLine":250,"endColumn":49},{"ruleId":"208","severity":1,"message":"209","line":267,"column":37,"nodeType":"199","endLine":267,"endColumn":49},{"ruleId":"171","severity":1,"message":"210","line":8,"column":7,"nodeType":"173","messageId":"174","endLine":8,"endColumn":11},{"ruleId":"184","severity":1,"message":"211","line":77,"column":15,"nodeType":"212","endLine":102,"endColumn":6},{"ruleId":"184","severity":1,"message":"213","line":105,"column":8,"nodeType":"186","endLine":105,"endColumn":25,"suggestions":"214"},{"ruleId":"171","severity":1,"message":"215","line":3,"column":13,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"216","line":5,"column":13,"nodeType":"173","messageId":"174","endLine":5,"endColumn":20},{"ruleId":"171","severity":1,"message":"217","line":6,"column":14,"nodeType":"173","messageId":"174","endLine":6,"endColumn":25},{"ruleId":"171","severity":1,"message":"218","line":37,"column":29,"nodeType":"173","messageId":"174","endLine":37,"endColumn":33},{"ruleId":"171","severity":1,"message":"219","line":40,"column":29,"nodeType":"173","messageId":"174","endLine":40,"endColumn":41},{"ruleId":"171","severity":1,"message":"220","line":41,"column":29,"nodeType":"173","messageId":"174","endLine":41,"endColumn":34},{"ruleId":"197","severity":1,"message":"198","line":45,"column":13,"nodeType":"199","endLine":48,"endColumn":15},{"ruleId":"197","severity":1,"message":"198","line":49,"column":13,"nodeType":"199","endLine":52,"endColumn":15},{"ruleId":"171","severity":1,"message":"221","line":3,"column":7,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"222","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":30},{"ruleId":"171","severity":1,"message":"223","line":2,"column":25,"nodeType":"173","messageId":"174","endLine":2,"endColumn":32},{"ruleId":"171","severity":1,"message":"224","line":2,"column":34,"nodeType":"173","messageId":"174","endLine":2,"endColumn":40},{"ruleId":"171","severity":1,"message":"202","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":16},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'income' is assigned a value but never used.","Identifier","unusedVar","'setIncome' is assigned a value but never used.","'expenses' is assigned a value but never used.","'setExpenses' is assigned a value but never used.","'manageIncomeExpenses' is defined but never used.","'firestoreCurrentCollection' is assigned a value but never used.","'Card' is defined but never used.","'Alert' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emptyData'. Either include it or remove the dependency array. You can also do a functional update 'setEmptyData(e => ...)' if you only need 'emptyData' in the 'setEmptyData' call.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'dropVal'. Either include it or remove the dependency array. You can also do a functional update 'setDropVal(d => ...)' if you only need 'dropVal' in the 'setDropVal' call.",["228"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'targetGroup' and 'uid'. Either include them or remove the dependency array.",["229"],["230"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'Facebook' is defined but never used.","'firebase' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Link' is defined but never used.","'goal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'data' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'expenses'. Either include it or remove the dependency array. Outer scope values like 'expense' aren't valid dependencies because mutating them doesn't re-render the component.",["231"],"'AiIcons' is defined but never used.","'GrIcons' is defined but never used.","'userMessage' is defined but never used.","'user' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'data01' is assigned a value but never used.","'PureComponent' is defined but never used.","'Tooltip' is defined but never used.","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [emptyData, uid]",{"range":"242","text":"243"},"Update the dependencies array to be: [dropVal, uid]",{"range":"244","text":"245"},"Update the dependencies array to be: [filterDrop, targetGroup, uid]",{"range":"246","text":"247"},"Update the dependencies array to be: [fullData, targetGroup, uid]",{"range":"248","text":"249"},"Update the dependencies array to be: [income, expenses]",{"range":"250","text":"251"},[3566,3571],"[emptyData, uid]",[7365,7370],"[dropVal, uid]",[8969,8981],"[filterDrop, targetGroup, uid]",[9456,9466],"[fullData, targetGroup, uid]",[2512,2529],"[income, expenses]"]
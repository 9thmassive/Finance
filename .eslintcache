[{"C:\\Users\\User\\Documents\\Finance\\src\\index.js":"1","C:\\Users\\User\\Documents\\Finance\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\Finance\\src\\App.js":"3","C:\\Users\\User\\Documents\\Finance\\src\\pages\\Income.js":"4","C:\\Users\\User\\Documents\\Finance\\src\\pages\\Transaction.js":"5","C:\\Users\\User\\Documents\\Finance\\src\\pages\\Expenses.js":"6","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\User.js":"7","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\Dashboard.js":"8","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\Login.js":"9","C:\\Users\\User\\Documents\\Finance\\src\\components\\findSaving\\FindSaving.js":"10","C:\\Users\\User\\Documents\\Finance\\src\\components\\NavBar\\Navbar.js":"11","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\Signup.js":"12","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\ForgotPassword.js":"13","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\PieCharts.js":"14","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\firebase.js":"15","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\Cards.js":"16","C:\\Users\\User\\Documents\\Finance\\src\\components\\NavBar\\SidebarData.js":"17","C:\\Users\\User\\Documents\\Finance\\src\\components\\charts\\linerChart.js":"18","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\loginWith\\Google.js":"19","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\loginWith\\Facebook.js":"20","C:\\Users\\User\\Documents\\Finance\\src\\components\\charts\\pieChart.js":"21","C:\\Users\\User\\Documents\\Finance\\src\\components\\card\\Cart.js":"22","C:\\Users\\User\\Documents\\Finance\\src\\components\\Hypothec\\Hypothec.js":"23","C:\\Users\\User\\Documents\\Finance\\src\\components\\Deposit\\MainDeposit.js":"24","C:\\Users\\User\\Documents\\Finance\\src\\components\\profile\\Profile.js":"25","C:\\Users\\User\\Documents\\Finance\\src\\components\\Deposit\\Deposit.js":"26","C:\\Users\\User\\Documents\\Finance\\src\\components\\Deposit\\DepositChild.js":"27","C:\\Users\\User\\Documents\\Finance\\src\\components\\leadingPage\\LeadingPage.js":"28","C:\\Users\\User\\Documents\\Finance\\src\\components\\leadingPage\\Info.js":"29"},{"size":765,"mtime":1614189942375,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1613558432573,"results":"32","hashOfConfig":"31"},{"size":4393,"mtime":1614273959652,"results":"33","hashOfConfig":"31"},{"size":7488,"mtime":1614095455832,"results":"34","hashOfConfig":"31"},{"size":183,"mtime":1613558432573,"results":"35","hashOfConfig":"31"},{"size":15354,"mtime":1614095512603,"results":"36","hashOfConfig":"31"},{"size":656,"mtime":1613558432432,"results":"37","hashOfConfig":"31"},{"size":380,"mtime":1613558432432,"results":"38","hashOfConfig":"31"},{"size":4599,"mtime":1613558432557,"results":"39","hashOfConfig":"31"},{"size":106,"mtime":1613558432464,"results":"40","hashOfConfig":"31"},{"size":2518,"mtime":1614015771385,"results":"41","hashOfConfig":"31"},{"size":7359,"mtime":1614015771730,"results":"42","hashOfConfig":"31"},{"size":2683,"mtime":1613558432557,"results":"43","hashOfConfig":"31"},{"size":214,"mtime":1613558432432,"results":"44","hashOfConfig":"31"},{"size":464,"mtime":1613558432557,"results":"45","hashOfConfig":"31"},{"size":2341,"mtime":1614015771416,"results":"46","hashOfConfig":"31"},{"size":1164,"mtime":1614180135404,"results":"47","hashOfConfig":"31"},{"size":3808,"mtime":1613558432432,"results":"48","hashOfConfig":"31"},{"size":1977,"mtime":1613558432557,"results":"49","hashOfConfig":"31"},{"size":1697,"mtime":1613558432557,"results":"50","hashOfConfig":"31"},{"size":1137,"mtime":1613558432464,"results":"51","hashOfConfig":"31"},{"size":1871,"mtime":1613558432432,"results":"52","hashOfConfig":"31"},{"size":2414,"mtime":1614275849066,"results":"53","hashOfConfig":"31"},{"size":1297,"mtime":1614015771334,"results":"54","hashOfConfig":"31"},{"size":4404,"mtime":1614015771637,"results":"55","hashOfConfig":"31"},{"size":1579,"mtime":1614015771323,"results":"56","hashOfConfig":"31"},{"size":444,"mtime":1614015771334,"results":"57","hashOfConfig":"31"},{"size":16054,"mtime":1614015771441,"results":"58","hashOfConfig":"31"},{"size":623,"mtime":1614015771441,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"jiyx19",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\User\\Documents\\Finance\\src\\index.js",[],["133","134"],"C:\\Users\\User\\Documents\\Finance\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\App.js",["135","136","137","138","139","140"],"C:\\Users\\User\\Documents\\Finance\\src\\pages\\Income.js",["141","142","143"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Spinner} from 'react-bootstrap'\r\nimport { Form } from 'react-bootstrap'\r\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react'\r\nimport { toast } from 'react-toastify'\r\nimport firebase from 'firebase'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\r\nimport './exp.css'\r\nimport './inc.css'\r\ntoast.configure()\r\n\r\nfunction Income() {\r\n    const [uid, setUid] = useState(null);\r\n    const [incomeData, setIncomeData] = useState([]);\r\n    useEffect(() => {\r\n      if(uid === null) {\r\n        return\r\n      }\r\n      firebase.firestore().collection('income').doc(uid).onSnapshot(doc => {\r\n        let currentData = doc.data();\r\n        let dataResult = [];\r\n        /*for(let data of Object.values(currentData)) {\r\n          dataResult = [...data, ...dataResult]\r\n        }*/\r\n        setIncomeData(dataResult);\r\n      })\r\n    },[uid])\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((currentUser) => {\r\n            setUid(currentUser?.uid)\r\n        })\r\n    }, []);\r\n\r\n    const [emptyData, setEmptyData] = useState(false)\r\n\r\n    const [req, setReq] = useState(true)\r\n\r\n    const [rowData, setRowData] = useState([])\r\n\r\n    useEffect(() => {\r\n      console.log(rowData)\r\n    },[rowData]);\r\n    //-------------------\r\n    const nameRef = useRef()\r\n    const priceRef = useRef()\r\n    //-------------------\r\n\r\n    const toDay = () => new Date().toLocaleDateString().split('/').join('-')\r\n    const thisTime = () => ' - ' + new Date().toLocaleTimeString()\r\n\r\n    function userMessage(num, msg) {\r\n        if (num === 1) {\r\n            return toast.info(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        if (num === 2) {\r\n            return toast.success(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        if (num === 3) {\r\n            return toast.error(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (uid) {\r\n            firebase\r\n                .firestore()\r\n                .collection('income')\r\n                .doc(uid)\r\n                .get((doc) => {\r\n                    if (!doc.data()[toDay()]) {\r\n                        setEmptyData(!emptyData)\r\n                    }\r\n                })\r\n        }\r\n    }, [uid]);\r\n\r\n    // useEffect(() => {\r\n    //   if(!uid) return;\r\n    //   firebase.firestore().collection('income').doc(uid).get(doc => {\r\n    //     let currentData = [];\r\n    //     for(let data of Object.values(doc.data())) {\r\n    //       currentData = [...currentData, ...data];\r\n    //     }\r\n    //     setRowData(currentData);\r\n    //   })\r\n    // },[uid]);\r\n    //\r\n\r\n    async function handleAddIncome() {\r\n        if (parseInt(priceRef.current.value) !== +priceRef.current.value) {\r\n            priceRef.current.style.border = 'red solid 3px'\r\n\r\n            return userMessage(1, '🤨 Please add only number in a price')\r\n        }\r\n        if (nameRef.current.value.length < 1) {\r\n            nameRef.current.style.border = 'red solid 3px'\r\n            return userMessage(1, '😕 Name - Input should not be empty')\r\n        }\r\n        setReq((prev) => !prev)\r\n\r\n\r\n        if (emptyData) {\r\n            await firebase\r\n                .firestore()\r\n                .collection('income')\r\n                .doc(uid)\r\n                .set({\r\n                    [toDay()]: [\r\n                        {\r\n                            name: nameRef.current.value,\r\n                            value: priceRef.current.value,\r\n                            date: toDay() + thisTime(),\r\n                        },\r\n                    ],\r\n                })\r\n            setEmptyData((prev) => !prev)\r\n        } else {\r\n            await firebase\r\n                .firestore()\r\n                .collection('income')\r\n                .doc(uid)\r\n                .update({\r\n                    [toDay()]: firebase.firestore.FieldValue.arrayUnion({\r\n                        name: nameRef.current.value,\r\n                        value: priceRef.current.value,\r\n                        date: toDay() + thisTime(),\r\n                    }),\r\n                })\r\n        }\r\n\r\n        setReq((prev) => !prev)\r\n        return userMessage(1, 'Added successFull')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container \">\r\n                <div className=\"add namPrice incomeData\">\r\n                    <Form.Control\r\n                        className=\"expInput expLeft\"\r\n                        placeholder=\"Name\"\r\n                        ref={nameRef}\r\n                        onChange={() => {\r\n                            nameRef.current.style.border = 'none'\r\n                        }}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"expInput expLeft\"\r\n                        placeholder=\"Price\"\r\n                        ref={priceRef}\r\n                        onChange={() => {\r\n                            priceRef.current.style.border = 'none'\r\n                        }}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div className=\"incomeData\">\r\n\r\n\r\n                {req ? (\r\n                    <Button\r\n                        className=\"btn mainColor w-50\"\r\n                        onClick={handleAddIncome}\r\n                    >\r\n                        Add List\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        className=\"w-50 mainColor\"\r\n                        variant=\"primary\"\r\n                        disabled\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Button>\r\n                )}\r\n                </div>\r\n            </div>\r\n            <br/>\r\n\r\n            <div className=\"list incomeData\">\r\n                <br />\r\n                <div\r\n                    className=\"ag-theme-alpine\"\r\n                    style={{ height: 400, width: 600 }}\r\n                >\r\n                    <AgGridReact rowData={incomeData}>\r\n                        <AgGridColumn field=\"name\"></AgGridColumn>\r\n                        <AgGridColumn field=\"value\"></AgGridColumn>\r\n                        <AgGridColumn field=\"date\"></AgGridColumn>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Income\r\n\r\n","C:\\Users\\User\\Documents\\Finance\\src\\pages\\Transaction.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\pages\\Expenses.js",["144","145","146","147","148","149","150"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Spinner, OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { DropdownButton, Dropdown, Form } from 'react-bootstrap'\r\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react'\r\nimport { toast } from 'react-toastify'\r\nimport firebase from 'firebase'\r\nimport Swal from 'sweetalert2'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\r\nimport Rating from 'react-simple-star-rating'\r\nimport myGrupRemoveIcoN from './img/dropRemove.svg'\r\nimport './exp.css'\r\n// import myGrupRemoveIcoN from './img/dropRemove.svg'\r\n//\r\nconst expList = [\r\n    {\r\n        nameExp: 'Auto insurance.',\r\n    },\r\n    {\r\n        nameExp: 'Health insurance.',\r\n    },\r\n    {\r\n        nameExp: 'Car payment.',\r\n    },\r\n    {\r\n        nameExp: 'Child care',\r\n    },\r\n    {\r\n        nameExp: 'Utility',\r\n    },\r\n]\r\ntoast.configure()\r\n\r\nfunction Expenses() {\r\n    const [uid, setUid] = useState(null)\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((currentUser) => {\r\n            setUid(currentUser?.uid)\r\n        })\r\n    }, [])\r\n\r\n    const [emptyData, setEmptyData] = useState(false)\r\n\r\n    const [group, setGroup] = useState(false)\r\n    const [rating, setRating] = useState(0)\r\n    const [req, setReq] = useState(true)\r\n\r\n    const [dropDownVal, setDropDownVal] = useState('Select Expenses Group')\r\n    const [dropVal, setDropVal] = useState(expList)\r\n    const [filterDrop,setFilterDrop] = useState()\r\n    //------------------\r\n    const [rowData, setRowData] = useState([])\r\n    const [fullData, setFullData] = useState();\r\n    //-------------------\r\n    const groupNameRef = useRef()\r\n    const nameRef = useRef()\r\n    const priceRef = useRef()\r\n    const [selectedGroup, setSelectedGroup] = useState('Car Payment')\r\n    //-------------------\r\n    const[targetGroup,setTargetGroup] = useState()\r\n\r\n    const toDay = () =>\r\n        new Date().toLocaleDateString().split('/').join('-').toString()\r\n\r\n    const thisTime = () => new Date().toLocaleTimeString()\r\n\r\n    function userMessage(num, msg) {\r\n        if (num === 1) {\r\n            return toast.info(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        if (num === 2) {\r\n            return toast.success(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        if (num === 3) {\r\n            return toast.error(msg, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (uid) {\r\n            firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .get((doc) => {\r\n                    if (!doc.data()[toDay()]) {\r\n                        setEmptyData(!emptyData)\r\n                    }\r\n                })\r\n        }\r\n    }, [uid]);\r\n\r\n\r\n    //\r\n    async function handleAddExpenses() {\r\n        if (parseInt(priceRef.current.value) !== +priceRef.current.value) {\r\n            priceRef.current.style.border = 'red solid 3px'\r\n\r\n            return userMessage(1, '🤨 Please add only number in a price')\r\n        }\r\n        if (nameRef.current.value.length < 1) {\r\n            nameRef.current.style.border = 'red solid 3px'\r\n            return userMessage(1, '😕 Name - Input should not be empty')\r\n        }\r\n        setReq((prev) => !prev)\r\n        if (emptyData) {\r\n            await firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .set({\r\n                    [toDay()]: [\r\n                        {\r\n                            group: selectedGroup,\r\n                            name: nameRef.current.value,\r\n                            value: priceRef.current.value,\r\n                            priority: rating,\r\n                            date: toDay() + thisTime(),\r\n                        },\r\n                    ],\r\n                })\r\n            setEmptyData((prev) => !prev)\r\n        } else {\r\n            await firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .doc(uid)\r\n                .update({\r\n                    [toDay()]: firebase.firestore.FieldValue.arrayUnion({\r\n                        group: selectedGroup,\r\n                        name: nameRef.current.value,\r\n                        value: priceRef.current.value,\r\n                        priority: rating,\r\n                        date: toDay() + ' - ' + thisTime(),\r\n                    }),\r\n                })\r\n        }\r\n\r\n        setReq((prev) => !prev)\r\n        return userMessage(1, 'Added successFull')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!uid) {\r\n            return\r\n        }\r\n        firebase\r\n            .firestore()\r\n            .collection('expenses')\r\n            .doc(uid)\r\n            .onSnapshot((doc) => {\r\n                /*if (doc.data()[toDay()]) {\r\n                    setRowData(doc.data()[toDay()].reverse())\r\n                }*/\r\n            })\r\n    }, [uid])\r\n\r\n    async function handleDropDownAddVal() {\r\n        if (dropVal.find((el) => el.nameExp === groupNameRef.current.value)) {\r\n            return userMessage(\r\n                1,\r\n                '😕 The group has already been added, you cannot add twice'\r\n            )\r\n        }\r\n        if (groupNameRef.current.value.length === 0) {\r\n            return setGroup(!group)\r\n        }\r\n        await firebase\r\n            .firestore()\r\n            .collection('user')\r\n            .doc(uid)\r\n            .update({\r\n                dropdown: firebase.firestore.FieldValue.arrayUnion({\r\n                    nameExp: groupNameRef.current.value,\r\n                }),\r\n            })\r\n        setDropDownVal(groupNameRef.current.value)\r\n        setGroup((prev) => !prev)\r\n        return userMessage(\r\n            2,\r\n            '😎 The new group has been successfully added to your account'\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        if (!uid) {\r\n            return\r\n        }\r\n        firebase\r\n            .firestore()\r\n            .collection('user')\r\n            .doc(uid)\r\n            .onSnapshot((doc) => {\r\n                if (doc.data()?.dropdown) {\r\n                    setDropVal(() => [...dropVal, ...doc.data()?.dropdown])\r\n                    //remove dubllicate from dropdown data\r\n                    setDropVal((prev) =>\r\n                        prev.filter(\r\n                            (v, i, a) =>\r\n                                a.findIndex((t) => t.nameExp === v.nameExp) ===\r\n                                i\r\n                        )\r\n                    )\r\n                }\r\n            })\r\n    }, [uid])\r\n    async function handleRemoveGroup(e) {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text:\r\n                'If you delete then all information on this group is deleted.!',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!',\r\n        }).then( (result) => {\r\n          setTargetGroup(   e.target.parentNode.innerHTML.split('<')[0])\r\n\r\n            if (result.isConfirmed) {\r\n\r\n                firebase.firestore().collection('expenses').doc(uid).get().then((doc)=>{\r\n                  setFullData((prev)=>prev = doc.data())\r\n                },)\r\n\r\n                firebase.firestore().collection('user').doc(uid).get().then((doc)=>{\r\n                  setFilterDrop(doc.data().dropdown)\r\n\r\n                  console.log(doc.data())\r\n                },)\r\n\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        if(filterDrop){\r\n          let data = filterDrop.filter(({nameExp})=>nameExp!=targetGroup)\r\n          firebase.firestore().collection('user').doc(uid).set({dropdown:data})\r\n          console.log(filterDrop,'effect')\r\n          setDropVal([...expList,...data])\r\n        }\r\n\r\n    },[filterDrop])\r\n\r\n    useEffect(() => {\r\n      if(fullData){\r\n        let filteredData = fullData\r\n        for(let arr in filteredData){\r\n          filteredData[arr] = filteredData[arr].filter(({group})=>group!==targetGroup)\r\n        }\r\n        firebase.firestore().collection('expenses').doc(uid).set({...filteredData})\r\n\r\n      }\r\n    },[fullData]);\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Title as=\"h3\" className=\"headerTooltip\">\r\n                Popover right\r\n            </Popover.Title>\r\n            <Popover.Content>How important is your spending?</Popover.Content>\r\n        </Popover>\r\n    )\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <div className=\"container \">\r\n                <div className=\" add\">\r\n                    {group ? (\r\n                        <DropdownButton id=\"mainColor\" title={dropDownVal}>\r\n                            {dropVal.map(({ nameExp }, index) => {\r\n                                return (\r\n                                    <Dropdown.Item\r\n                                        key={index}\r\n                                        className=\"drop-hover\"\r\n                                        as=\"button\"\r\n                                        onClick={(e) => {\r\n                                            setDropDownVal(\r\n                                                () => e.target.outerText\r\n                                            )\r\n                                            setSelectedGroup(\r\n                                                () => e.target.outerText\r\n                                            )\r\n                                        }}\r\n                                    >\r\n                                        <p className=\"dropDownData\">\r\n                                            {nameExp}\r\n                                            {!expList.find(\r\n                                                ({ nameExp: val }) =>\r\n                                                    val === nameExp\r\n                                            ) ? (\r\n                                                <img\r\n                                                    onClick={handleRemoveGroup}\r\n                                                    className=\"remove_group_dropdown\"\r\n                                                    src={myGrupRemoveIcoN}\r\n                                                />\r\n                                            ) : null}\r\n                                        </p>\r\n                                    </Dropdown.Item>\r\n                                )\r\n                            })}\r\n                        </DropdownButton>\r\n                    ) : (\r\n                        <Form.Control\r\n                            ref={groupNameRef}\r\n                            className=\"expInput\"\r\n                            placeholder=\"Group name\"\r\n                        />\r\n                    )}\r\n\r\n                    <button\r\n                        className=\"btn mainColor expLeft \"\r\n                        onClick={\r\n                            group\r\n                                ? () => setGroup(!group)\r\n                                : handleDropDownAddVal\r\n                        }\r\n                    >\r\n                        {group ? '+Create new Group' : 'Add group'}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"add namPrice\">\r\n                    <Form.Control\r\n                        className=\"expInput expLeft\"\r\n                        placeholder=\"Name\"\r\n                        ref={nameRef}\r\n                        onChange={() => {\r\n                            nameRef.current.style.border = 'none'\r\n                        }}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"expInput expLeft\"\r\n                        placeholder=\"Price\"\r\n                        ref={priceRef}\r\n                        onChange={() => {\r\n                            priceRef.current.style.border = 'none'\r\n                        }}\r\n                    />\r\n                    <Form.Check className=\"expLeft expCheck\" />\r\n                </div>\r\n                <span className=\"txtc\">Cost Priority</span>\r\n                <div className=\"rate\">\r\n                    <Rating\r\n                        onClick={(rate) => {\r\n                            setRating(rate)\r\n                        }}\r\n                        ratingValue={rating}\r\n                        size={25}\r\n                        label\r\n                        transition\r\n                        fillColor=\"orange\"\r\n                        emptyColor=\"gray\"\r\n                    />\r\n                    <OverlayTrigger\r\n                        trigger=\"hover\"\r\n                        placement=\"right\"\r\n                        overlay={popover}\r\n                    >\r\n                        <p className=\"ratingPriority\">?</p>\r\n                    </OverlayTrigger>\r\n                </div>\r\n                {req ? (\r\n                    <Button\r\n                        className=\"btn mainColor w-50\"\r\n                        onClick={handleAddExpenses}\r\n                    >\r\n                        Add List\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        className=\"w-50 mainColor\"\r\n                        variant=\"primary\"\r\n                        disabled\r\n                    >\r\n                        <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                        />\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </Button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"list \">\r\n                <br />\r\n                <div\r\n                    className=\"ag-theme-alpine\"\r\n                    style={{ height: 300, width: 'auto' }}\r\n                >\r\n                    <AgGridReact rowData={rowData} >\r\n                        <AgGridColumn field=\"group\"></AgGridColumn>\r\n                        <AgGridColumn field=\"name\"></AgGridColumn>\r\n                        <AgGridColumn field=\"value\"></AgGridColumn>\r\n                        <AgGridColumn field=\"priority\"></AgGridColumn>\r\n                        <AgGridColumn field=\"date\"></AgGridColumn>\r\n                    </AgGridReact>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Expenses\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\User.js",["151","152","153","154"],"import { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useState } from 'react'\r\n\r\nexport default function User() {\r\n    const [error, setError] = useState('')\r\n\r\n    function logout() {}\r\n    return (\r\n        <>\r\n            {/* <Card className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profil</h2>\r\n                </Card.Body>\r\n            </Card> */}\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={logout}>\r\n                    Log out\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\Dashboard.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\Login.js",["155"],"import { Form, Button, Card } from 'react-bootstrap'\r\nimport { useRef } from 'react'\r\nimport './login.css'\r\nimport * as EmailValidator from 'email-validator'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport Google from './loginWith/Google'\r\nimport Facebook from './loginWith/Facebook'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport firebase from 'firebase'\r\nimport { Container } from 'react-bootstrap'\r\nimport { auth } from './firebase'\r\nimport './login.css'\r\ntoast.configure()\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const history = useHistory()\r\n\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    async function handleSumbit(e) {\r\n        e.preventDefault()\r\n\r\n        if (!EmailValidator.validate(emailRef.current.value)) {\r\n            return userMessage(false, `❌ Email not found`)\r\n        }\r\n\r\n        try {\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            userMessage(true, `✅ Loggined`)\r\n            // setUser(auth.currentUser)\r\n            return history.push('/dashboard')\r\n        } catch (error) {\r\n            return userMessage(false, `❌ ${error.message}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: '100vh' }}\r\n            >\r\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                    <Card>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Form>\r\n                                <h2 className=\"text-center mb-4 drk\">\r\n                                    Sign in\r\n                                </h2>\r\n                                <Facebook />\r\n\r\n                                <Google />\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        ref={emailRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        ref={passwordRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Link to=\"/forgot-password\">\r\n                                    Forgot password ?\r\n                                </Link>\r\n                                <Button\r\n                                    onClick={handleSumbit}\r\n                                    className=\"w-100 btn loginBtn signup\"\r\n                                    type=\"sumit\"\r\n                                >\r\n                                    LOGIN\r\n                                </Button>\r\n                                <hr />\r\n                                <div className=\"or\">\r\n                                    <span> Or</span> <br />\r\n                                </div>\r\n                            </Form>\r\n\r\n                            <Link to=\"/registration\">\r\n                                <Button className=\"w-100 btn \">Sing up</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\findSaving\\FindSaving.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\NavBar\\Navbar.js",["156","157","158","159"],"//import { IconName } from 'react-icons/io';\r\n//import { IconName } from 'react-icons/fa';\r\nimport React, { useState } from 'react'\r\nimport firebase from 'firebase'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as GrIcons from 'react-icons/gr'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { SidebarData } from './SidebarData'\r\nimport './Navbar.css'\r\nimport { IconContext } from 'react-icons'\r\nimport Logo from './../leadingPage_proto/dist/images/logo.png'\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSidebar] = useState(false)\r\n\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    const [isShown, setIsShown] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <div className=\"navbar\">\r\n                    <img className=\"log\" src={Logo} />\r\n                    <button\r\n                        className=\"btn butt\"\r\n                        onClick={() => {\r\n                            firebase.auth().signOut()\r\n                            window.location.href = '/'\r\n                        }}\r\n                    >\r\n                        Log Out\r\n                    </button>\r\n                    <Link to=\"#\" className=\"menu-bars\"></Link>\r\n                </div>\r\n\r\n                <nav\r\n                    className={!sidebar ? 'nav-menu active' : 'nav-menu'}\r\n                    onMouseEnter={() => setIsShown(true)}\r\n                    onMouseLeave={() => setIsShown(false)}\r\n                >\r\n                    <ul className=\"nav-menu-items ulCl\" onClick={showSidebar}>\r\n                        {SidebarData.map((item, index) => {\r\n                            return (\r\n                                <>\r\n                                    <NavLink\r\n                                        key={index}\r\n                                        className={`${item.cName} pos`}\r\n                                        to={item.path}\r\n                                       \r\n                                        activeClassName=\"activeLink\"\r\n                                    >\r\n                                        {item.icon}\r\n                                        {isShown && (\r\n                                            <span className=\"nav-bar-item\">\r\n                                                {item.title}\r\n                                            </span>\r\n                                        )}\r\n                                    </NavLink>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\Signup.js",["160"],"import { Form, Button, Card, Spinner } from 'react-bootstrap'\r\nimport { Container } from 'react-bootstrap'\r\nimport './login.css'\r\nimport { useRef, useState } from 'react'\r\nimport firebase from 'firebase'\r\nimport { auth } from './firebase'\r\nimport * as EmailValidator from 'email-validator'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport './login.css'\r\n\r\ntoast.configure()\r\nexport default function Signup() {\r\n    const [loading, setLoading] = useState(false)\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const surNameRef = useRef()\r\n    const nameRef = useRef()\r\n    // const history = useHistory()\r\n\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n\r\n    function signup(email, password) {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    async function handleSumbit(e) {\r\n        e.preventDefault()\r\n\r\n        if (!EmailValidator.validate(emailRef.current.value)) {\r\n            return userMessage(false, '❌ Invalid Email Address:')\r\n        }\r\n\r\n        if (!(passwordRef.current.value === passwordConfirmRef.current.value)) {\r\n            return userMessage(false, '❌ Password do not much')\r\n        }\r\n        if (\r\n            passwordRef.current.value.length < 6 ||\r\n            passwordConfirmRef.current.value < 6\r\n        ) {\r\n            return userMessage(\r\n                false,\r\n                '❌ Password should be minimum 6 characters'\r\n            )\r\n        }\r\n        try {\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            let fullName =\r\n                nameRef.current.value + ' ' + surNameRef.current.value\r\n            let currentUser = auth.currentUser\r\n            currentUser.updateProfile({\r\n                displayName: fullName,\r\n            })\r\n\r\n            await firebase\r\n                .firestore()\r\n                .collection('user')\r\n                .doc(currentUser.uid)\r\n                .set({\r\n                    displayName: currentUser.displayName,\r\n                })\r\n\r\n            setLoading(() => false)\r\n            window.location.href = '/dashboard'\r\n            userMessage(true, `✅ Welcome ${currentUser.displayName}`)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            return userMessage(\r\n                false,\r\n                '❌ The email address is already in use by another account.'\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: '100vh' }}\r\n                id=\"bolola\"\r\n            >\r\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                    <Card>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Form>\r\n                                <h2 className=\"text-center mb-4 drk\">\r\n                                    Sign up\r\n                                </h2>\r\n                                <Form.Group id=\"name\">\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        ref={nameRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                    <Form.Label>Surname</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        ref={surNameRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        ref={emailRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group id=\"password\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        ref={passwordRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"password-confirm\">\r\n                                    <Form.Label>\r\n                                        Password Confirmation\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        ref={passwordConfirmRef}\r\n                                        required\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Button\r\n                                    onClick={handleSumbit}\r\n                                    className=\"w-100 btn loginBtn signup\"\r\n                                    type=\"sumit\"\r\n                                >\r\n                                    {loading ? (\r\n                                        <>\r\n                                            <Spinner\r\n                                                as=\"span\"\r\n                                                animation=\"border\"\r\n                                                size=\"sm\"\r\n                                                role=\"status\"\r\n                                                aria-hidden=\"true\"\r\n                                            />\r\n                                            <span className=\"sr-only\">\r\n                                                Loading...\r\n                                            </span>\r\n                                        </>\r\n                                    ) : (\r\n                                        'Login'\r\n                                    )}\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\ForgotPassword.js",["161"],"import { Form, Button, Card } from 'react-bootstrap'\r\nimport { Container } from 'react-bootstrap'\r\nimport './login.css'\r\nimport { useRef } from 'react'\r\nimport firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport './login.css'\r\n\r\ntoast.configure()\r\nexport default function ForgotPassword(props) {\r\n    const emailRef = useRef()\r\n\r\n    async function handleForgot() {\r\n        try {\r\n            await firebase.auth().sendPasswordResetEmail(emailRef)\r\n            toast.info('📩' + ' Pleas check your email', {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        } catch (e) {\r\n            toast.error('❌ ' + e.message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                className=\"d-flex align-items-center justify-content-center\"\r\n                style={{ minHeight: '100vh' }}\r\n                id=\"bolola\"\r\n            >\r\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\r\n                    <Card>\r\n                        <Card.Body className=\"cardBody\">\r\n                            <Form>\r\n                                <h2 className=\"text-center mb-4 drk\">\r\n                                    Password reset\r\n                                </h2>\r\n                                <Form.Group id=\"email\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        ref={emailRef}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button\r\n                                    onClick={handleForgot}\r\n                                    className=\"w-100 btn loginBtn signup\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Reset Password\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\PieCharts.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\firebase.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\Rotation\\Cards.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\NavBar\\SidebarData.js",["162","163"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as IoIcons from 'react-icons/io'\r\nimport * as GrIcons from 'react-icons/gr'\r\n\r\nimport { FaPiggyBank } from 'react-icons/fa'\r\nimport { BsArrowLeftRight } from 'react-icons/bs'\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Dashboard',\r\n        path: '/dashboard',\r\n        icon: <BsArrowLeftRight />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Income',\r\n        path: '/Income',\r\n        icon: <FaPiggyBank />,\r\n        cName: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Expenses',\r\n        path: '/Expenses',\r\n        icon: <IoIcons.IoIosPaper />,\r\n        cName: 'nav-text',\r\n    },\r\n    /*{\r\n        title: 'Team',\r\n        path: '/team',\r\n        icon: <IoIcons.IoMdPeople />,\r\n        cName: 'nav-text',\r\n    },*/\r\n   {\r\n        title: 'Calculator',\r\n        path: '/calculator',\r\n        icon: <IoIcons.IoMdHelpCircle />,\r\n        cName: 'nav-text',\r\n    },\r\n     {\r\n        title: 'Hypothec',\r\n        path: '/hypothec',\r\n        icon: <FaIcons.FaEnvelopeOpenText />,\r\n        cName: 'nav-text',\r\n    },\r\n\r\n]\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\charts\\linerChart.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\loginWith\\Google.js",["164"],"import React from 'react'\r\nimport firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\ntoast.configure()\r\nexport default function LoginWith() {\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n    return (\r\n        <div\r\n            className=\"login_with\"\r\n            onClick={() => {\r\n                const provider = new firebase.auth.GoogleAuthProvider()\r\n                firebase\r\n                    .auth()\r\n                    .signInWithPopup(provider)\r\n                    .then((result) => {\r\n                        var user = result.user\r\n                        userMessage(true, `✅ Welcome ${user.displayName}`)\r\n                        setTimeout(() => {\r\n                            window.location.href = 'dashboard'\r\n                        }, 3000)\r\n                    })\r\n                    .catch((error) => {\r\n                        var errorMessage = error.message\r\n                        userMessage(false, `❌  ${errorMessage}`)\r\n                    })\r\n            }}\r\n        >\r\n            <img\r\n                className=\"login_with_img\"\r\n                src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-google-icon-logo-png-transparent-svg-vector-bie-supply-14.png\"\r\n            />\r\n            <span>Sign in with Google</span>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\registration\\loginWith\\Facebook.js",["165","166","167","168","169"],"import React from 'react'\r\nimport firebase from 'firebase'\r\nimport { toast } from 'react-toastify'\r\ntoast.configure()\r\nexport default function LoginWith({ setUser }) {\r\n    function userMessage(type, message) {\r\n        if (type) {\r\n            return toast.success(message, {\r\n                position: 'bottom-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n        return toast.error(message, {\r\n            position: 'bottom-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n    return (\r\n        <div\r\n            className=\"login_with\"\r\n            oonClick={() => {\r\n                var provider = new firebase.auth.FacebookAuthProvider()\r\n                firebase\r\n                    .auth()\r\n                    .signInWithPopup(provider)\r\n                    .then((result) => {\r\n                        var user = result.user\r\n                    })\r\n                    .catch((error) => {\r\n                        var errorMessage = error.message\r\n                        var email = error.email\r\n                    })\r\n            }}\r\n        >\r\n            <img\r\n                className=\"login_with_img\"\r\n                src=\"https://i.pinimg.com/originals/42/75/49/427549f6f22470ff93ca714479d180c2.png\"\r\n            />\r\n            <span>Log in with Facebook</span>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\charts\\pieChart.js",["170"],"import {PieChart,Pie } from 'recharts'\r\n\r\nconst data01 = [\r\n    {\r\n      \"name\": \"Group A\",\r\n      \"value\": 400\r\n    },\r\n    {\r\n      \"name\": \"Group B\",\r\n      \"value\": 300\r\n    },\r\n    {\r\n      \"name\": \"Group C\",\r\n      \"value\": 300\r\n    },\r\n    {\r\n      \"name\": \"Group D\",\r\n      \"value\": 200\r\n    },\r\n    {\r\n      \"name\": \"Group E\",\r\n      \"value\": 278\r\n    },\r\n    {\r\n      \"name\": \"Group F\",\r\n      \"value\": 189\r\n    }\r\n  ];\r\n  const data02 = [\r\n    {\r\n      \"name\": \"Group A\",\r\n      \"value\": 2400\r\n    },\r\n    {\r\n      \"name\": \"Group B\",\r\n      \"value\": 4567\r\n    },\r\n    {\r\n      \"name\": \"Group C\",\r\n      \"value\": 1398\r\n    },\r\n    {\r\n      \"name\": \"Group D\",\r\n      \"value\": 9800\r\n    },\r\n    {\r\n      \"name\": \"Group E\",\r\n      \"value\": 3908\r\n    },\r\n    {\r\n      \"name\": \"Group F\",\r\n      \"value\": 4800\r\n    }\r\n  ];\r\n\r\n\r\n      export default function App(props) {\r\n          return (\r\n            <PieChart width={300} height={250}>\r\n\r\n                <Pie data={data02} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#d65a31\" label />\r\n            </PieChart>\r\n          )\r\n      }\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\card\\Cart.js",["171","172"],"import React, { PureComponent } from 'react'\r\nimport { BarChart, Bar, Tooltip, Legend } from 'recharts'\r\nexport default function App(props) {\r\n    const data = [\r\n        {\r\n            name: 'Page A',\r\n            uv: 4000,\r\n            pv: 2400,\r\n            amt: 2400,\r\n        },\r\n        {\r\n            name: 'Page B',\r\n            uv: 3000,\r\n            pv: 1398,\r\n            amt: 2210,\r\n        },\r\n        {\r\n            name: 'Page C',\r\n            uv: 2000,\r\n            pv: 9800,\r\n            amt: 2290,\r\n        },\r\n        {\r\n            name: 'Page D',\r\n            uv: 2780,\r\n            pv: 3908,\r\n            amt: 2000,\r\n        },\r\n        {\r\n            name: 'Page E',\r\n            uv: 1890,\r\n            pv: 4800,\r\n            amt: 2181,\r\n        },\r\n        {\r\n            name: 'Page F',\r\n            uv: 2390,\r\n            pv: 3800,\r\n            amt: 2500,\r\n        },\r\n        {\r\n            name: 'Page G',\r\n            uv: 3490,\r\n            pv: 4300,\r\n            amt: 2100,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <div className=\"cart_and_icon_card\">\r\n                <svg width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <image href={props.icon} height=\"30\" width=\"30\" />\r\n                </svg>\r\n\r\n                <BarChart width={80} height={30} data={data}>\r\n                    <Bar dataKey=\"uv\" fill=\"#8884d8\" />\r\n\r\n                    <Tooltip />\r\n                </BarChart>\r\n            </div>\r\n            <div className=\"card_type_money\">\r\n                <span className=\"card_type\">{props.type}</span>\r\n                <span\r\n                    style={{ color: `${props.font_color}` }}\r\n                    className=\"card_money\"\r\n                >\r\n                    {props.money}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\Hypothec\\Hypothec.js",["173","174","175"],"C:\\Users\\User\\Documents\\Finance\\src\\components\\Deposit\\MainDeposit.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\profile\\Profile.js",["176"],"import React from 'react'\r\nimport firebase from 'firebase'\r\nimport './profile.css'\r\nexport default function Profile() {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row my-2\">\r\n                    <div className=\"col-lg-8 order-lg-2\">\r\n                        {/* <ul className=\"nav nav-tabs\">\r\n                            <li className=\"nav-item\">\r\n                                <a\r\n                                    href=\"\"\r\n                                    data-target=\"#profile\"\r\n                                    data-toggle=\"tab\"\r\n                                    className=\"nav-link active\"\r\n                                >\r\n                                    Profile\r\n                                </a>\r\n                            </li>\r\n                        </ul> */}\r\n                        <div className=\"tab-content py-4\">\r\n                            <div className=\"tab-pane active\" id=\"profile\">\r\n                                <h5 className=\"mb-3\">User Profile</h5>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12\">\r\n                                        <h5 className=\"mt-2\">\r\n                                            <span className=\"fa fa-clock-o ion-clock float-right\"></span>\r\n                                            Info\r\n                                        </h5>\r\n                                        <table className=\"table table-sm table-hover table-striped\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <strong>Name</strong>{' '}\r\n                                                        Warren Buffet\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <strong>Age</strong>{' '}\r\n                                                        ahagin\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <strong>Country</strong>\r\n                                                        Armenia Yerevan Charbakh\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <strong>\r\n                                                            Last activity\r\n                                                        </strong>{' '}\r\n                                                        01.5.1974\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 order-lg-1 text-center\">\r\n                        <label className=\"custom-file\">\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"file\"\r\n                                className=\"custom-file-input\"\r\n                            />\r\n                        </label>\r\n                        <img\r\n                            src=\"http://i1.wp.com/www.tshambler.com/wp-content/uploads/2017/06/Warren-Buffett-Image.jpg?resize=600%2C600\"\r\n                            className=\"mx-auto img-fluid img-circle d-block\"\r\n                            alt=\"avatar\"\r\n                            style={{ width: '250px', height: '250px' }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\Deposit\\Deposit.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\Deposit\\DepositChild.js",[],"C:\\Users\\User\\Documents\\Finance\\src\\components\\leadingPage\\LeadingPage.js",["177","178","179","180","181","182","183","184","185","186","187","188"],"import React from 'react'\r\nimport './dist/css/style.css'\r\nimport './dist/css/ld.css'\r\nimport Info from './Info'\r\nimport { Link } from 'react-router-dom'\r\nimport app from './dist/images/svg/app.svg'\r\nimport cutom_budget from './dist/images/svg/cutsom_budget.svg'\r\nimport goal from './dist/images/svg/goal.svg'\r\nimport save_smart from './dist/images/svg/save_smart.svg'\r\nimport logo from './dist/images/logo.png'\r\n\r\nexport default function LeadingPage() {\r\n    let info = [\r\n        {\r\n            icon: app,\r\n            title: ' All your money in one app',\r\n            txt: ` See where all your money goes by\r\n            easily adding your cash, credit\r\n            cards, investments, and bills.`,\r\n        },\r\n        {\r\n            icon: cutom_budget,\r\n            title: ' Spend smarter and save more',\r\n            txt: `Personalized Finance™ make\r\n            your money go further. We’ll\r\n            automatically find savings you\r\n            missed.`,\r\n        },\r\n        {\r\n            icon: save_smart,\r\n            title: ' Save smarter with custom budgets',\r\n            txt: `Start saving more today. Easily\r\n            create your budget in Finance.\r\n            We’ll automatically categorize\r\n            your transactions so you don’t\r\n            have to.`,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <div className=\"body-wrap\">\r\n                <header className=\"site-header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"site-header-inner head\">\r\n                            <div className=\"brand header-brand\">\r\n                                <h1 className=\"m-0\">\r\n                                    <img\r\n                                        className=\"header-logo-image log\"\r\n                                        src={logo}\r\n                                        alt=\"Logo\"\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            {/* <div className=\"hero-cta\">\r\n                                <a className=\"button \">Log in</a>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <section className=\"hero\">\r\n                        <div className=\"container\">\r\n                            <div className=\"hero-inner\">\r\n                                <div className=\"hero-copy\">\r\n                                    <h1 className=\"hero-title mt-0\">\r\n                                        The easiest way to <br /> manage\r\n                                        personal finance\r\n                                    </h1>\r\n                                    <p className=\"hero-paragraph\">\r\n                                        Reach your goals with personalized\r\n                                        insights, custom budgets, spend\r\n                                        tracking, and subscription\r\n                                        monitoring—all for free\r\n                                    </p>\r\n                                    <div className=\"hero-cta\">\r\n                                        <a\r\n                                            className=\"button  st\"\r\n                                            href=\"/registration\"\r\n                                        >\r\n                                            Get start\r\n                                        </a>\r\n                                        <a className=\"button\" href=\"/login\">\r\n                                            Login\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"hero-figure anime-element\">\r\n                                    <img src=\"https://cdn.pixabay.com/photo/2019/06/16/18/28/finance-icons-4278471_1280.png\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"features section\">\r\n                        <div className=\"container\">\r\n                            <div className=\"features-inner section-inner has-bottom-divider\">\r\n                                <div className=\"features-wrap\">\r\n                                    {info.map(({ icon, title, txt }, index) => {\r\n                                        return (\r\n                                            <Info\r\n                                                icon={icon}\r\n                                                title={title}\r\n                                                txt={txt}\r\n                                                key={index}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"pricing section\">\r\n                        <div className=\"container-sm\">\r\n                            <div className=\"pricing-inner section-inner\">\r\n                                <div className=\"pricing-header text-center\">\r\n                                    <h2 className=\"section-title mt-0\">\r\n                                        Unlimited for all\r\n                                    </h2>\r\n                                    <p className=\"section-paragraph mb-0\">\r\n                                        Lorem ipsum dolor sit amet, consectetur\r\n                                        adipiscing elit, sed do eiusmod tempor\r\n                                        incididunt ut labore et dolore magna\r\n                                        aliqua. Ut ad quis nostrud.\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"pricing-tables-wrap\">\r\n                                    <div className=\"pricing-table\">\r\n                                        <div className=\"pricing-table-inner is-revealing\">\r\n                                            <div className=\"pricing-table-main\">\r\n                                                <div className=\"pricing-table-header pb-24\">\r\n                                                    <div className=\"pricing-table-price\">\r\n                                                        <span className=\"pricing-table-price-currency h2\">\r\n                                                            $\r\n                                                        </span>\r\n                                                        <span className=\"pricing-table-price-amount h1\">\r\n                                                            49\r\n                                                        </span>\r\n                                                        <span className=\"text-xs\">\r\n                                                            /month\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"pricing-table-features-title text-xs pt-24 pb-24\">\r\n                                                    What you will get\r\n                                                </div>\r\n                                                <ul className=\"pricing-table-features list-reset text-xs\">\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <span>\r\n                                                            Lorem ipsum dolor\r\n                                                            sit nisi\r\n                                                        </span>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            <div className=\"pricing-table-cta mb-8\">\r\n                                                <a\r\n                                                    className=\"button button-primary button-shadow button-block\"\r\n                                                    href=\"#\"\r\n                                                >\r\n                                                    Pre order now\r\n                                                </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"cta section\">\r\n                        <div className=\"container\">\r\n                            <div className=\"cta-inner section-inner\">\r\n                                <h3 className=\"section-title mt-0\">\r\n                                    Still not convinced on buying?\r\n                                </h3>\r\n                                <div className=\"cta-cta\">\r\n                                    <a\r\n                                        className=\"button button-primary button-wide-mobile\"\r\n                                        href=\"/registration\"\r\n                                    >\r\n                                        Get in touch\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n                <footer className=\"site-footer\">\r\n                    <div className=\"container\">\r\n                        <div className=\"site-footer-inner\">\r\n                            <div className=\"brand footer-brand\">\r\n                                <a href=\"#\">\r\n                                    <img\r\n                                        className=\"header-logo-image log\"\r\n                                        src={logo}\r\n                                        alt=\"Logo\"\r\n                                    />\r\n                                </a>\r\n                            </div>\r\n                            <ul className=\"footer-links list-reset\">\r\n                                <li>\r\n                                    <a href=\"#\">Contact</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">About us</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">FAQ's</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">Support</a>\r\n                                </li>\r\n                            </ul>\r\n                            <ul className=\"footer-social-links list-reset\">\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <span className=\"screen-reader-text\">\r\n                                            Facebook\r\n                                        </span>\r\n                                        <svg\r\n                                            width={16}\r\n                                            height={16}\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                d=\"M6.023 16L6 9H3V6h3V4c0-2.7 1.672-4 4.08-4 1.153 0 2.144.086 2.433.124v2.821h-1.67c-1.31 0-1.563.623-1.563 1.536V6H13l-1 3H9.28v7H6.023z\"\r\n                                                fill=\"#0270D7\"\r\n                                            />\r\n                                        </svg>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <span className=\"screen-reader-text\">\r\n                                            Twitter\r\n                                        </span>\r\n                                        <svg\r\n                                            width={16}\r\n                                            height={16}\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                d=\"M16 3c-.6.3-1.2.4-1.9.5.7-.4 1.2-1 1.4-1.8-.6.4-1.3.6-2.1.8-.6-.6-1.5-1-2.4-1-1.7 0-3.2 1.5-3.2 3.3 0 .3 0 .5.1.7-2.7-.1-5.2-1.4-6.8-3.4-.3.5-.4 1-.4 1.7 0 1.1.6 2.1 1.5 2.7-.5 0-1-.2-1.5-.4C.7 7.7 1.8 9 3.3 9.3c-.3.1-.6.1-.9.1-.2 0-.4 0-.6-.1.4 1.3 1.6 2.3 3.1 2.3-1.1.9-2.5 1.4-4.1 1.4H0c1.5.9 3.2 1.5 5 1.5 6 0 9.3-5 9.3-9.3v-.4C15 4.3 15.6 3.7 16 3z\"\r\n                                                fill=\"#0270D7\"\r\n                                            />\r\n                                        </svg>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#\">\r\n                                        <span className=\"screen-reader-text\">\r\n                                            Google\r\n                                        </span>\r\n                                        <svg\r\n                                            width={16}\r\n                                            height={16}\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                d=\"M7.9 7v2.4H12c-.2 1-1.2 3-4 3-2.4 0-4.3-2-4.3-4.4 0-2.4 2-4.4 4.3-4.4 1.4 0 2.3.6 2.8 1.1l1.9-1.8C11.5 1.7 9.9 1 8 1 4.1 1 1 4.1 1 8s3.1 7 7 7c4 0 6.7-2.8 6.7-6.8 0-.5 0-.8-.1-1.2H7.9z\"\r\n                                                fill=\"#0270D7\"\r\n                                            />\r\n                                        </svg>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"footer-copyright\">\r\n                                © 2021 by Super-Team\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\User\\Documents\\Finance\\src\\components\\leadingPage\\Info.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":30,"column":12,"nodeType":"195","messageId":"196","endLine":30,"endColumn":18},{"ruleId":"193","severity":1,"message":"197","line":30,"column":20,"nodeType":"195","messageId":"196","endLine":30,"endColumn":29},{"ruleId":"193","severity":1,"message":"198","line":31,"column":12,"nodeType":"195","messageId":"196","endLine":31,"endColumn":20},{"ruleId":"193","severity":1,"message":"199","line":31,"column":22,"nodeType":"195","messageId":"196","endLine":31,"endColumn":33},{"ruleId":"193","severity":1,"message":"200","line":34,"column":28,"nodeType":"195","messageId":"196","endLine":34,"endColumn":48},{"ruleId":"193","severity":1,"message":"201","line":35,"column":23,"nodeType":"195","messageId":"196","endLine":35,"endColumn":49},{"ruleId":"193","severity":1,"message":"202","line":21,"column":13,"nodeType":"195","messageId":"196","endLine":21,"endColumn":24},{"ruleId":"193","severity":1,"message":"203","line":39,"column":21,"nodeType":"195","messageId":"196","endLine":39,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":99,"column":8,"nodeType":"206","endLine":99,"endColumn":13,"suggestions":"207"},{"ruleId":"193","severity":1,"message":"203","line":52,"column":21,"nodeType":"195","messageId":"196","endLine":52,"endColumn":31},{"ruleId":"204","severity":1,"message":"205","line":114,"column":8,"nodeType":"206","endLine":114,"endColumn":13,"suggestions":"208"},{"ruleId":"204","severity":1,"message":"209","line":228,"column":8,"nodeType":"206","endLine":228,"endColumn":13,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":259,"column":60,"nodeType":"213","messageId":"214","endLine":259,"endColumn":62},{"ruleId":"204","severity":1,"message":"215","line":265,"column":7,"nodeType":"206","endLine":265,"endColumn":19,"suggestions":"216"},{"ruleId":"204","severity":1,"message":"215","line":276,"column":7,"nodeType":"206","endLine":276,"endColumn":17,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":314,"column":49,"nodeType":"220","endLine":318,"endColumn":51},{"ruleId":"193","severity":1,"message":"221","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":14},{"ruleId":"193","severity":1,"message":"222","line":1,"column":24,"nodeType":"195","messageId":"196","endLine":1,"endColumn":29},{"ruleId":"193","severity":1,"message":"223","line":5,"column":12,"nodeType":"195","messageId":"196","endLine":5,"endColumn":17},{"ruleId":"193","severity":1,"message":"224","line":5,"column":19,"nodeType":"195","messageId":"196","endLine":5,"endColumn":27},{"ruleId":"193","severity":1,"message":"225","line":10,"column":8,"nodeType":"195","messageId":"196","endLine":10,"endColumn":16},{"ruleId":"193","severity":1,"message":"226","line":5,"column":13,"nodeType":"195","messageId":"196","endLine":5,"endColumn":20},{"ruleId":"193","severity":1,"message":"227","line":6,"column":13,"nodeType":"195","messageId":"196","endLine":6,"endColumn":20},{"ruleId":"193","severity":1,"message":"228","line":7,"column":13,"nodeType":"195","messageId":"196","endLine":7,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":25,"column":21,"nodeType":"220","endLine":25,"endColumn":55},{"ruleId":"193","severity":1,"message":"229","line":8,"column":10,"nodeType":"195","messageId":"196","endLine":8,"endColumn":20},{"ruleId":"230","severity":1,"message":"231","line":17,"column":29,"nodeType":"213","messageId":"232","endLine":17,"endColumn":30},{"ruleId":"193","severity":1,"message":"227","line":3,"column":13,"nodeType":"195","messageId":"196","endLine":3,"endColumn":20},{"ruleId":"193","severity":1,"message":"228","line":5,"column":13,"nodeType":"195","messageId":"196","endLine":5,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":49,"column":13,"nodeType":"220","endLine":52,"endColumn":15},{"ruleId":"193","severity":1,"message":"233","line":6,"column":14,"nodeType":"195","messageId":"196","endLine":6,"endColumn":25},{"ruleId":"193","severity":1,"message":"234","line":37,"column":29,"nodeType":"195","messageId":"196","endLine":37,"endColumn":33},{"ruleId":"193","severity":1,"message":"235","line":40,"column":29,"nodeType":"195","messageId":"196","endLine":40,"endColumn":41},{"ruleId":"193","severity":1,"message":"236","line":41,"column":29,"nodeType":"195","messageId":"196","endLine":41,"endColumn":34},{"ruleId":"218","severity":1,"message":"219","line":45,"column":13,"nodeType":"220","endLine":48,"endColumn":15},{"ruleId":"193","severity":1,"message":"237","line":3,"column":7,"nodeType":"195","messageId":"196","endLine":3,"endColumn":13},{"ruleId":"193","severity":1,"message":"238","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":30},{"ruleId":"193","severity":1,"message":"239","line":2,"column":34,"nodeType":"195","messageId":"196","endLine":2,"endColumn":40},{"ruleId":"193","severity":1,"message":"240","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"241","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":16},{"ruleId":"193","severity":1,"message":"242","line":5,"column":20,"nodeType":"195","messageId":"196","endLine":5,"endColumn":29},{"ruleId":"193","severity":1,"message":"225","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":16},{"ruleId":"193","severity":1,"message":"243","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":14},{"ruleId":"193","severity":1,"message":"244","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":12},{"ruleId":"218","severity":1,"message":"219","line":89,"column":37,"nodeType":"220","endLine":89,"endColumn":128},{"ruleId":"245","severity":1,"message":"246","line":174,"column":49,"nodeType":"220","endLine":177,"endColumn":50},{"ruleId":"245","severity":1,"message":"246","line":209,"column":33,"nodeType":"220","endLine":209,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":219,"column":37,"nodeType":"220","endLine":219,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":222,"column":37,"nodeType":"220","endLine":222,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":225,"column":37,"nodeType":"220","endLine":225,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":228,"column":37,"nodeType":"220","endLine":228,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":233,"column":37,"nodeType":"220","endLine":233,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":250,"column":37,"nodeType":"220","endLine":250,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":267,"column":37,"nodeType":"220","endLine":267,"endColumn":49},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'income' is assigned a value but never used.","Identifier","unusedVar","'setIncome' is assigned a value but never used.","'expenses' is assigned a value but never used.","'setExpenses' is assigned a value but never used.","'manageIncomeExpenses' is defined but never used.","'firestoreCurrentCollection' is assigned a value but never used.","'currentData' is assigned a value but never used.","'setRowData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emptyData'. Either include it or remove the dependency array. You can also do a functional update 'setEmptyData(e => ...)' if you only need 'emptyData' in the 'setEmptyData' call.","ArrayExpression",["249"],["250"],"React Hook useEffect has a missing dependency: 'dropVal'. Either include it or remove the dependency array. You can also do a functional update 'setDropVal(d => ...)' if you only need 'dropVal' in the 'setDropVal' call.",["251"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'targetGroup' and 'uid'. Either include them or remove the dependency array.",["252"],["253"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Card' is defined but never used.","'Alert' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'firebase' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'GrIcons' is defined but never used.","'useHistory' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'userMessage' is defined but never used.","'user' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'data01' is assigned a value but never used.","'PureComponent' is defined but never used.","'Legend' is defined but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'goal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},"Update the dependencies array to be: [emptyData, uid]",{"range":"263","text":"264"},{"range":"265","text":"264"},"Update the dependencies array to be: [dropVal, uid]",{"range":"266","text":"267"},"Update the dependencies array to be: [filterDrop, targetGroup, uid]",{"range":"268","text":"269"},"Update the dependencies array to be: [fullData, targetGroup, uid]",{"range":"270","text":"271"},[3079,3084],"[emptyData, uid]",[3566,3571],[7372,7377],"[dropVal, uid]",[8655,8667],"[filterDrop, targetGroup, uid]",[8993,9003],"[fullData, targetGroup, uid]"]